{"version":3,"sources":["?","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/third-party/crypto-js/core.js","../client/js/third-party/crypto-js/enc-base64.js","../client/js/third-party/crypto-js/hmac.js","../client/js/third-party/crypto-js/sha1.js","../client/js/third-party/crypto-js/sha256.js","../client/js/third-party/crypto-js/lib-typedarrays.js","../client/js/s3/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/s3/uploader.basic.js","../client/js/s3/request-signer.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/s3/multipart.initiate.ajax.requester.js","../client/js/s3/multipart.complete.ajax.requester.js","../client/js/s3/multipart.abort.ajax.requester.js","../client/js/s3/s3.xhr.upload.handler.js","../client/js/s3/s3.form.upload.handler.js","../client/js/s3/uploader.js","../client/js/azure/util.js","../client/js/azure/uploader.basic.js","../client/js/azure/azure.xhr.upload.handler.js","../client/js/azure/get-sas.js","../client/js/azure/rest/delete-blob.js","../client/js/azure/rest/put-blob.js","../client/js/azure/rest/put-block.js","../client/js/azure/rest/put-block-list.js","../client/js/azure/uploader.js"],"names":["global","qq","element","hide","style","display","this","attach","type","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","name","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","push","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","undefined","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","length","Uint8Array","character","charCodeAt","log","message","level","console","isObject","variable","Object","prototype","toString","call","isFunction","isArray","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","Array","slice","arguments","newStr","nextIdxToReplace","substring","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","error","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","target","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","retVal","Storage","key","getItem","charAt","bind","oldFunc","context","newArgs","concat","apply","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","match","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","options","title","self","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","index","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","callbacks","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","toUpperCase","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","setUploadHeaders","extraHeaders","toSend","promises","endpointHandler","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","FineUploader","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","uploader","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus","CryptoJS","C","C_lib","lib","Base","F","overrides","subtype","mixIn","init","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","_doProcessBlock","processedWords","C_algo","Hasher","cfg","_doReset","messageUpdate","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","Base64","_map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","base64Str","base64StrLength","paddingIndex","bits1","bits2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","W","SHA1","_hash","M","H","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","superInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","s3","util","ALGORITHM_PARAM_NAME","AWS_PARAM_PREFIX","CREDENTIAL_PARAM_NAME","DATE_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_VALUE","SERVER_SIDE_ENCRYPTION_PARAM_NAME","SERVER_SIDE_ENCRYPTION_PARAM_VALUE","SESSION_TOKEN_PARAM_NAME","V4_ALGORITHM_PARAM_VALUE","V4_SIGNATURE_PARAM_NAME","CASE_SENSITIVE_PARAM_NAMES","UNSIGNABLE_REST_HEADER_NAMES","UNPREFIXED_PARAM_NAMES","getBucket","bucket","patterns","pattern","_getPrefixedParamName","getPolicy","policy","conditions","date","drift","clockDrift","accessKey","acl","expectedStatus","sessionToken","successRedirectUrl","getSuccessRedirectAbsoluteUrl","minFileSize","maxFileSize","reducedRedundancy","region","serverSideEncryption","signatureVersion","expiration","getPolicyExpirationDate","Content-Type","success_action_status","success_action_redirect","getV4CredentialsString","getV4PolicyDate","awsParamName","enforceSizeLimits","refreshPolicyCredentials","newSessionToken","sessionTokenFound","oldCondIdx","oldCondObj","oldCondName","oldCondVal","generateAwsParams","signPolicyCallback","policyJson","awsParams","customParams","AWSAccessKeyId","policyAndSignature","updatedAccessKey","updatedSessionToken","signature","minSize","adjustedMinSize","adjustedMaxSize","adjustedDate","getPolicyDate","getCredentialsDate","getUTCFullYear","getUTCMonth","getUTCDate","_minutesToAdd_","pad","minutesToAdd","setMinutes","getMinutes","toISOString","number","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseIframeResponse","queryString","search","etag","targetAnchorContainer","encodeQueryStringParam","percentEncoded","uriEscape","uriEscapePath","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","objectProperties","host","credentials","secretKey","iframeSupport","localBlankPagePath","onCredentialsExpired","setCredentials","_currentCredentials","_aclStore","_cannedKeys","_cannedBuckets","_buckets","_hosts","getKey","ignoreEmpty","setAcl","aclStore","_determineBucket","getHost","_determineHost","getKeyName","_determineKeyName","maxSizeLimit","oldParams","modifiedParams","paramName","credentialsProvider","onExpired","updateCredentials","_determineObjectPropertyValue","property","maybe","keynameLogic","onGetKeynameFailure","onGetKeynameSuccess","keyname","keynameToUse","_handleKeynameFunction","keynameFunc","successCallback","failureCallback","getResponseHeader","s3Key","s3Bucket","RequestSigner","handleSignatureReceived","responseJson","pendingSignatureData","pendingSignatures","signatureConstructor","invalid","expectingPolicy","generateHeaders","getStringToSignArtifacts","requestInfo","endOfUrl","signatureSpec","toSign","headerNames","headersStr","generateStringToSign","contentMd5","headerIndexesToRemove","headerName","headerIdx","hashedContent","v2","getStringToSign","v4","signedHeaders","getSignedHeaders","hashed","toSignRaw","raw","thisSignatureRequester","REQUEST_TYPE","MULTIPART_ABORT","uploadId","MULTIPART_INITIATE","MULTIPART_COMPLETE","MULTIPART_UPLOAD","partNum","getEncodedHashedPayload","Host","determineSignatureClientSide","toBeSigned","signatureEffort","updatedHeaders","getHeaders","getToSign","signatureArtifacts","signApiRequest","stringToSign","signPolicy","Authorization","getRequestDate","getEndOfUrl","headersWordArray","headersHmacSha1","policyStr","policyWordArray","base64Policy","policyHmacSha1","policyHmacSha1Base64","getCanonicalQueryString","endOfUri","encodedQueryParams","encodedQueryParamNames","queryStrings","queryParamIdx","canonicalQueryString","nameAndVal","paramVal","forEach","encodedQueryParamName","getCanonicalRequest","getCanonicalUri","onloadend","DONE","getScope","canonicalRequest","hashedRequest","scope","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","headersPattern","matches","credentialPattern","credentialCondition","credential","condition","getSignature","queryParams","stringToSignRaw","constructStringToSign","artifacts","theHeaders","withUploadId","theUploadId","withContent","theContent","withContentType","theContentType","withPartNum","thePartNum","toUTCString","_artifacts_","handleSuccessResponse","parsedResponse","pendingRequests","successIndicator","failureIndicator","InitiateMultipartAjaxRequester","getSignatureAjaxRequester","getContentType","handleInitiateRequestComplete","uploadIdElements","messageElements","pendingInitiateRequests","domParser","DOMParser","responseDoc","parseFromString","CompleteMultipartAjaxRequester","handleCompleteRequestComplete","pendingCompleteRequests","bucketEls","keyEls","getCompleteRequestBody","etagEntries","implementation","createDocument","etagEntry","partEl","partNumEl","partNumTextEl","createTextNode","etagTextEl","etagEl","XMLSerializer","serializeToString","AbortMultipartAjaxRequester","handleAbortRequestComplete","awsErrorMsg","errorEls","onGetBucket","onGetHost","onGetKeyName","combine","etagMap","etags","requesters","completeMultipart","initHeaders","urlSafe","restSignature","put","domain","track","setup","uploadIdPromise","initiateMultipart","abortMultipart","policySignature","initParams","cachedBucket","cachedHost","shouldReset","keyName","encodedKey","parsedErrorProps","parseError","awsResponseXml","codeEls","messageEls","parsedDoc","errorDetails","existedInLocalStorage","isValidResponse","responseData","handleFinishedUpload","handleUpload","azure","AZURE_PARAM_PREFIX","_paramNameMatchesAzureParameter","getParamsAsHeaders","parseAzureError","codeTag","messageTag","errorTag","blobProperties","_cannedBlobNames","getBlobName","onGetBlobName","_determineBlobName","deleteBlob","_deleteBlob","blobNameOptionValue","fileExtension","blobNameToUse","blobName","relatedToCancel","deleteBlobSasUri","blobUriStore","deleteFileEndpointStore","getSasSuccess","sasUri","getSasFailure","DeleteBlob","GetSas","restRequestVerb","combineChunks","getSignedUrl","mimeType","blockIdEntries","putBlockList","determineBlobUrl","containerUrl","getBlobNameSuccess","getBlobNameFailure","getSasId","getSasXhr","determineBlobUrlSuccess","blobUrl","getSasForPutBlobOrBlock","determineBlobUrlFailure","azureError","minFileSizeForChunking","getBlobMetadata","putBlob","PutBlob","putBlock","PutBlock","PutBlockList","blockIdEntry","chunkingData","sasResponseReceived","requestPromises","blobUri","requestPromise","restVerb","bloburi","codes","endpoints","createBlockId","zeros","digits","paddedPartNum","btoa","blockId","createRequestBody","latestEl","latestTextEl","fileMimeType","registerXhrCallback","blockIdsXml","x-ms-blob-content-type"],"mappings":"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","file":"all.fine-uploader.min.js","sourcesContent":[null,"/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.14.1\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var id = this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL\n            });\n\n            sessionData.deleteFileEndpoint && this.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n            sessionData.deleteFileParams && this.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n            if (sessionData.thumbnailUrl) {\n                this._thumbnailUrls[id] = sessionData.thumbnailUrl;\n            }\n\n            this._netUploaded++;\n            this._netUploadedOrQueued++;\n\n            return id;\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n                else {\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\n                        // upload chunk success\n                        function success(response, xhr) {\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                            handler.clearCachedChunk(id, chunkIdx);\n\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                responseToReport = upload.normalizeResponse(response, true),\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                            if (inProgressChunkIdx >= 0) {\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\n                            }\n\n                            handler._maybePersistChunkedState(id);\n\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                chunked.finalize(id);\n                            }\n                            else if (chunked.hasMoreParts(id)) {\n                                chunked.sendNext(id);\n                            }\n                            else {\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                            }\n                        },\n\n                        // upload chunk failure\n                        function failure(response, xhr) {\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\n                        }\n                        )\n                        .done(function() {\n                            handler.clearXhr(id, chunkIdx);\n                        });\n                }\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            params[spec.chunking.paramNames.partIndex] = chunkData.part;\n            params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n            params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n            params[spec.chunking.paramNames.totalParts] = chunkData.count;\n            params[spec.totalFileSizeName] = size;\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            log: log\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                !response.success ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(params, xhr, fileOrBlob, id) {\n            var formData = new FormData(),\n                method = spec.method,\n                endpoint = spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n\n            if (multipart) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(id, xhr) {\n            var extraHeaders = spec.customHeaders.get(id),\n                fileOrBlob = handler.getFile(id);\n\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n            if (!multipart) {\n                xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n            }\n\n            qq.each(extraHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx, resuming) {\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                size = getSize(id),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend(params, xhr, chunkData.blob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n            toSend = setParamsAndGetEntityToSend(params, xhr, fileOrBlob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"POST\",\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {}\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [method],\n        method: method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(params)\n                .withHeaders(headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n/**\n * CryptoJS core components.\n */\nqq.CryptoJS = (function (Math, undefined) {\n    /**\n     * CryptoJS namespace.\n     */\n    var C = {};\n\n    /**\n     * Library namespace.\n     */\n    var C_lib = C.lib = {};\n\n    /**\n     * Base object for prototypal inheritance.\n     */\n    var Base = C_lib.Base = (function () {\n        function F() {}\n\n        return {\n            /**\n             * Creates a new object that inherits from this object.\n             *\n             * @param {Object} overrides Properties to copy into the new object.\n             *\n             * @return {Object} The new object.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var MyType = CryptoJS.lib.Base.extend({\n             *         field: 'value',\n             *\n             *         method: function () {\n             *         }\n             *     });\n             */\n            extend: function (overrides) {\n                // Spawn\n                F.prototype = this;\n                var subtype = new F();\n\n                // Augment\n                if (overrides) {\n                    subtype.mixIn(overrides);\n                }\n\n                // Create default initializer\n                if (!subtype.hasOwnProperty('init')) {\n                    subtype.init = function () {\n                        subtype.$super.init.apply(this, arguments);\n                    };\n                }\n\n                // Initializer's prototype is the subtype object\n                subtype.init.prototype = subtype;\n\n                // Reference supertype\n                subtype.$super = this;\n\n                return subtype;\n            },\n\n            /**\n             * Extends this object and runs the init method.\n             * Arguments to create() will be passed to init().\n             *\n             * @return {Object} The new object.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var instance = MyType.create();\n             */\n            create: function () {\n                var instance = this.extend();\n                instance.init.apply(instance, arguments);\n\n                return instance;\n            },\n\n            /**\n             * Initializes a newly created object.\n             * Override this method to add some logic when your objects are created.\n             *\n             * @example\n             *\n             *     var MyType = CryptoJS.lib.Base.extend({\n             *         init: function () {\n             *             // ...\n             *         }\n             *     });\n             */\n            init: function () {\n            },\n\n            /**\n             * Copies properties into this object.\n             *\n             * @param {Object} properties The properties to mix in.\n             *\n             * @example\n             *\n             *     MyType.mixIn({\n             *         field: 'value'\n             *     });\n             */\n            mixIn: function (properties) {\n                for (var propertyName in properties) {\n                    if (properties.hasOwnProperty(propertyName)) {\n                        this[propertyName] = properties[propertyName];\n                    }\n                }\n\n                // IE won't copy toString using the loop above\n                if (properties.hasOwnProperty('toString')) {\n                    this.toString = properties.toString;\n                }\n            },\n\n            /**\n             * Creates a copy of this object.\n             *\n             * @return {Object} The clone.\n             *\n             * @example\n             *\n             *     var clone = instance.clone();\n             */\n            clone: function () {\n                return this.init.prototype.extend(this);\n            }\n        };\n    }());\n\n    /**\n     * An array of 32-bit words.\n     *\n     * @property {Array} words The array of 32-bit words.\n     * @property {number} sigBytes The number of significant bytes in this word array.\n     */\n    var WordArray = C_lib.WordArray = Base.extend({\n        /**\n         * Initializes a newly created word array.\n         *\n         * @param {Array} words (Optional) An array of 32-bit words.\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.lib.WordArray.create();\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n         */\n        init: function (words, sigBytes) {\n            words = this.words = words || [];\n\n            if (sigBytes != undefined) {\n                this.sigBytes = sigBytes;\n            } else {\n                this.sigBytes = words.length * 4;\n            }\n        },\n\n        /**\n         * Converts this word array to a string.\n         *\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n         *\n         * @return {string} The stringified word array.\n         *\n         * @example\n         *\n         *     var string = wordArray + '';\n         *     var string = wordArray.toString();\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n         */\n        toString: function (encoder) {\n            return (encoder || Hex).stringify(this);\n        },\n\n        /**\n         * Concatenates a word array to this word array.\n         *\n         * @param {WordArray} wordArray The word array to append.\n         *\n         * @return {WordArray} This word array.\n         *\n         * @example\n         *\n         *     wordArray1.concat(wordArray2);\n         */\n        concat: function (wordArray) {\n            // Shortcuts\n            var thisWords = this.words;\n            var thatWords = wordArray.words;\n            var thisSigBytes = this.sigBytes;\n            var thatSigBytes = wordArray.sigBytes;\n\n            // Clamp excess bits\n            this.clamp();\n\n            // Concat\n            if (thisSigBytes % 4) {\n                // Copy one byte at a time\n                for (var i = 0; i < thatSigBytes; i++) {\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n                }\n            } else if (thatWords.length > 0xffff) {\n                // Copy one word at a time\n                for (var i = 0; i < thatSigBytes; i += 4) {\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n                }\n            } else {\n                // Copy all words at once\n                thisWords.push.apply(thisWords, thatWords);\n            }\n            this.sigBytes += thatSigBytes;\n\n            // Chainable\n            return this;\n        },\n\n        /**\n         * Removes insignificant bits.\n         *\n         * @example\n         *\n         *     wordArray.clamp();\n         */\n        clamp: function () {\n            // Shortcuts\n            var words = this.words;\n            var sigBytes = this.sigBytes;\n\n            // Clamp\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n            words.length = Math.ceil(sigBytes / 4);\n        },\n\n        /**\n         * Creates a copy of this word array.\n         *\n         * @return {WordArray} The clone.\n         *\n         * @example\n         *\n         *     var clone = wordArray.clone();\n         */\n        clone: function () {\n            var clone = Base.clone.call(this);\n            clone.words = this.words.slice(0);\n\n            return clone;\n        },\n\n        /**\n         * Creates a word array filled with random bytes.\n         *\n         * @param {number} nBytes The number of random bytes to generate.\n         *\n         * @return {WordArray} The random word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n         */\n        random: function (nBytes) {\n            var words = [];\n            for (var i = 0; i < nBytes; i += 4) {\n                words.push((Math.random() * 0x100000000) | 0);\n            }\n\n            return new WordArray.init(words, nBytes);\n        }\n    });\n\n    /**\n     * Encoder namespace.\n     */\n    var C_enc = C.enc = {};\n\n    /**\n     * Hex encoding strategy.\n     */\n    var Hex = C_enc.Hex = {\n        /**\n         * Converts a word array to a hex string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The hex string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            // Shortcuts\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n\n            // Convert\n            var hexChars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                hexChars.push((bite >>> 4).toString(16));\n                hexChars.push((bite & 0x0f).toString(16));\n            }\n\n            return hexChars.join('');\n        },\n\n        /**\n         * Converts a hex string to a word array.\n         *\n         * @param {string} hexStr The hex string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n         */\n        parse: function (hexStr) {\n            // Shortcut\n            var hexStrLength = hexStr.length;\n\n            // Convert\n            var words = [];\n            for (var i = 0; i < hexStrLength; i += 2) {\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n            }\n\n            return new WordArray.init(words, hexStrLength / 2);\n        }\n    };\n\n    /**\n     * Latin1 encoding strategy.\n     */\n    var Latin1 = C_enc.Latin1 = {\n        /**\n         * Converts a word array to a Latin1 string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The Latin1 string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            // Shortcuts\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n\n            // Convert\n            var latin1Chars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                latin1Chars.push(String.fromCharCode(bite));\n            }\n\n            return latin1Chars.join('');\n        },\n\n        /**\n         * Converts a Latin1 string to a word array.\n         *\n         * @param {string} latin1Str The Latin1 string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n         */\n        parse: function (latin1Str) {\n            // Shortcut\n            var latin1StrLength = latin1Str.length;\n\n            // Convert\n            var words = [];\n            for (var i = 0; i < latin1StrLength; i++) {\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n            }\n\n            return new WordArray.init(words, latin1StrLength);\n        }\n    };\n\n    /**\n     * UTF-8 encoding strategy.\n     */\n    var Utf8 = C_enc.Utf8 = {\n        /**\n         * Converts a word array to a UTF-8 string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The UTF-8 string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            try {\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n            } catch (e) {\n                throw new Error('Malformed UTF-8 data');\n            }\n        },\n\n        /**\n         * Converts a UTF-8 string to a word array.\n         *\n         * @param {string} utf8Str The UTF-8 string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n         */\n        parse: function (utf8Str) {\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n        }\n    };\n\n    /**\n     * Abstract buffered block algorithm template.\n     *\n     * The property blockSize must be implemented in a concrete subtype.\n     *\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n     */\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n        /**\n         * Resets this block algorithm's data buffer to its initial state.\n         *\n         * @example\n         *\n         *     bufferedBlockAlgorithm.reset();\n         */\n        reset: function () {\n            // Initial values\n            this._data = new WordArray.init();\n            this._nDataBytes = 0;\n        },\n\n        /**\n         * Adds new data to this block algorithm's buffer.\n         *\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n         *\n         * @example\n         *\n         *     bufferedBlockAlgorithm._append('data');\n         *     bufferedBlockAlgorithm._append(wordArray);\n         */\n        _append: function (data) {\n            // Convert string to WordArray, else assume WordArray already\n            if (typeof data == 'string') {\n                data = Utf8.parse(data);\n            }\n\n            // Append\n            this._data.concat(data);\n            this._nDataBytes += data.sigBytes;\n        },\n\n        /**\n         * Processes available data blocks.\n         *\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n         *\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n         *\n         * @return {WordArray} The processed data.\n         *\n         * @example\n         *\n         *     var processedData = bufferedBlockAlgorithm._process();\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n         */\n        _process: function (doFlush) {\n            // Shortcuts\n            var data = this._data;\n            var dataWords = data.words;\n            var dataSigBytes = data.sigBytes;\n            var blockSize = this.blockSize;\n            var blockSizeBytes = blockSize * 4;\n\n            // Count blocks ready\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\n            if (doFlush) {\n                // Round up to include partial blocks\n                nBlocksReady = Math.ceil(nBlocksReady);\n            } else {\n                // Round down to include only full blocks,\n                // less the number of blocks that must remain in the buffer\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n            }\n\n            // Count words ready\n            var nWordsReady = nBlocksReady * blockSize;\n\n            // Count bytes ready\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n            // Process blocks\n            if (nWordsReady) {\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n                    // Perform concrete-algorithm logic\n                    this._doProcessBlock(dataWords, offset);\n                }\n\n                // Remove processed words\n                var processedWords = dataWords.splice(0, nWordsReady);\n                data.sigBytes -= nBytesReady;\n            }\n\n            // Return processed words\n            return new WordArray.init(processedWords, nBytesReady);\n        },\n\n        /**\n         * Creates a copy of this object.\n         *\n         * @return {Object} The clone.\n         *\n         * @example\n         *\n         *     var clone = bufferedBlockAlgorithm.clone();\n         */\n        clone: function () {\n            var clone = Base.clone.call(this);\n            clone._data = this._data.clone();\n\n            return clone;\n        },\n\n        _minBufferSize: 0\n    });\n\n    /**\n     * Abstract hasher template.\n     *\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n     */\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n        /**\n         * Configuration options.\n         */\n        cfg: Base.extend(),\n\n        /**\n         * Initializes a newly created hasher.\n         *\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n         *\n         * @example\n         *\n         *     var hasher = CryptoJS.algo.SHA256.create();\n         */\n        init: function (cfg) {\n            // Apply config defaults\n            this.cfg = this.cfg.extend(cfg);\n\n            // Set initial values\n            this.reset();\n        },\n\n        /**\n         * Resets this hasher to its initial state.\n         *\n         * @example\n         *\n         *     hasher.reset();\n         */\n        reset: function () {\n            // Reset data buffer\n            BufferedBlockAlgorithm.reset.call(this);\n\n            // Perform concrete-hasher logic\n            this._doReset();\n        },\n\n        /**\n         * Updates this hasher with a message.\n         *\n         * @param {WordArray|string} messageUpdate The message to append.\n         *\n         * @return {Hasher} This hasher.\n         *\n         * @example\n         *\n         *     hasher.update('message');\n         *     hasher.update(wordArray);\n         */\n        update: function (messageUpdate) {\n            // Append\n            this._append(messageUpdate);\n\n            // Update the hash\n            this._process();\n\n            // Chainable\n            return this;\n        },\n\n        /**\n         * Finalizes the hash computation.\n         * Note that the finalize operation is effectively a destructive, read-once operation.\n         *\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n         *\n         * @return {WordArray} The hash.\n         *\n         * @example\n         *\n         *     var hash = hasher.finalize();\n         *     var hash = hasher.finalize('message');\n         *     var hash = hasher.finalize(wordArray);\n         */\n        finalize: function (messageUpdate) {\n            // Final message update\n            if (messageUpdate) {\n                this._append(messageUpdate);\n            }\n\n            // Perform concrete-hasher logic\n            var hash = this._doFinalize();\n\n            return hash;\n        },\n\n        blockSize: 512/32,\n\n        /**\n         * Creates a shortcut function to a hasher's object interface.\n         *\n         * @param {Hasher} hasher The hasher to create a helper for.\n         *\n         * @return {Function} The shortcut function.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n         */\n        _createHelper: function (hasher) {\n            return function (message, cfg) {\n                return new hasher.init(cfg).finalize(message);\n            };\n        },\n\n        /**\n         * Creates a shortcut function to the HMAC's object interface.\n         *\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n         *\n         * @return {Function} The shortcut function.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n         */\n        _createHmacHelper: function (hasher) {\n            return function (message, key) {\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\n            };\n        }\n    });\n\n    /**\n     * Algorithm namespace.\n     */\n    var C_algo = C.algo = {};\n\n    return C;\n}(Math));\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function () {\n    // Shortcuts\n    var C = qq.CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var C_enc = C.enc;\n\n    /**\n     * Base64 encoding strategy.\n     */\n    var Base64 = C_enc.Base64 = {\n        /**\n         * Converts a word array to a Base64 string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The Base64 string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            // Shortcuts\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n            var map = this._map;\n\n            // Clamp excess bits\n            wordArray.clamp();\n\n            // Convert\n            var base64Chars = [];\n            for (var i = 0; i < sigBytes; i += 3) {\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n                }\n            }\n\n            // Add padding\n            var paddingChar = map.charAt(64);\n            if (paddingChar) {\n                while (base64Chars.length % 4) {\n                    base64Chars.push(paddingChar);\n                }\n            }\n\n            return base64Chars.join('');\n        },\n\n        /**\n         * Converts a Base64 string to a word array.\n         *\n         * @param {string} base64Str The Base64 string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n         */\n        parse: function (base64Str) {\n            // Shortcuts\n            var base64StrLength = base64Str.length;\n            var map = this._map;\n\n            // Ignore padding\n            var paddingChar = map.charAt(64);\n            if (paddingChar) {\n                var paddingIndex = base64Str.indexOf(paddingChar);\n                if (paddingIndex != -1) {\n                    base64StrLength = paddingIndex;\n                }\n            }\n\n            // Convert\n            var words = [];\n            var nBytes = 0;\n            for (var i = 0; i < base64StrLength; i++) {\n                if (i % 4) {\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n                    nBytes++;\n                }\n            }\n\n            return WordArray.create(words, nBytes);\n        },\n\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n    };\n}());\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function () {\n    // Shortcuts\n    var C = qq.CryptoJS;\n    var C_lib = C.lib;\n    var Base = C_lib.Base;\n    var C_enc = C.enc;\n    var Utf8 = C_enc.Utf8;\n    var C_algo = C.algo;\n\n    /**\n     * HMAC algorithm.\n     */\n    var HMAC = C_algo.HMAC = Base.extend({\n        /**\n         * Initializes a newly created HMAC.\n         *\n         * @param {Hasher} hasher The hash algorithm to use.\n         * @param {WordArray|string} key The secret key.\n         *\n         * @example\n         *\n         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n         */\n        init: function (hasher, key) {\n            // Init hasher\n            hasher = this._hasher = new hasher.init();\n\n            // Convert string to WordArray, else assume WordArray already\n            if (typeof key == 'string') {\n                key = Utf8.parse(key);\n            }\n\n            // Shortcuts\n            var hasherBlockSize = hasher.blockSize;\n            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n            // Allow arbitrary length keys\n            if (key.sigBytes > hasherBlockSizeBytes) {\n                key = hasher.finalize(key);\n            }\n\n            // Clamp excess bits\n            key.clamp();\n\n            // Clone key for inner and outer pads\n            var oKey = this._oKey = key.clone();\n            var iKey = this._iKey = key.clone();\n\n            // Shortcuts\n            var oKeyWords = oKey.words;\n            var iKeyWords = iKey.words;\n\n            // XOR keys with pad constants\n            for (var i = 0; i < hasherBlockSize; i++) {\n                oKeyWords[i] ^= 0x5c5c5c5c;\n                iKeyWords[i] ^= 0x36363636;\n            }\n            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n            // Set initial values\n            this.reset();\n        },\n\n        /**\n         * Resets this HMAC to its initial state.\n         *\n         * @example\n         *\n         *     hmacHasher.reset();\n         */\n        reset: function () {\n            // Shortcut\n            var hasher = this._hasher;\n\n            // Reset\n            hasher.reset();\n            hasher.update(this._iKey);\n        },\n\n        /**\n         * Updates this HMAC with a message.\n         *\n         * @param {WordArray|string} messageUpdate The message to append.\n         *\n         * @return {HMAC} This HMAC instance.\n         *\n         * @example\n         *\n         *     hmacHasher.update('message');\n         *     hmacHasher.update(wordArray);\n         */\n        update: function (messageUpdate) {\n            this._hasher.update(messageUpdate);\n\n            // Chainable\n            return this;\n        },\n\n        /**\n         * Finalizes the HMAC computation.\n         * Note that the finalize operation is effectively a destructive, read-once operation.\n         *\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n         *\n         * @return {WordArray} The HMAC.\n         *\n         * @example\n         *\n         *     var hmac = hmacHasher.finalize();\n         *     var hmac = hmacHasher.finalize('message');\n         *     var hmac = hmacHasher.finalize(wordArray);\n         */\n        finalize: function (messageUpdate) {\n            // Shortcut\n            var hasher = this._hasher;\n\n            // Compute HMAC\n            var innerHash = hasher.finalize(messageUpdate);\n            hasher.reset();\n            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n            return hmac;\n        }\n    });\n}());\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function () {\n    // Shortcuts\n    var C = qq.CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_algo = C.algo;\n\n    // Reusable object\n    var W = [];\n\n    /**\n     * SHA-1 hash algorithm.\n     */\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\n        _doReset: function () {\n            this._hash = new WordArray.init([\n                0x67452301, 0xefcdab89,\n                0x98badcfe, 0x10325476,\n                0xc3d2e1f0\n            ]);\n        },\n\n        _doProcessBlock: function (M, offset) {\n            // Shortcut\n            var H = this._hash.words;\n\n            // Working variables\n            var a = H[0];\n            var b = H[1];\n            var c = H[2];\n            var d = H[3];\n            var e = H[4];\n\n            // Computation\n            for (var i = 0; i < 80; i++) {\n                if (i < 16) {\n                    W[i] = M[offset + i] | 0;\n                } else {\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n                    W[i] = (n << 1) | (n >>> 31);\n                }\n\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n                if (i < 20) {\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\n                } else if (i < 40) {\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\n                } else if (i < 60) {\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n                } else /* if (i < 80) */ {\n                    t += (b ^ c ^ d) - 0x359d3e2a;\n                }\n\n                e = d;\n                d = c;\n                c = (b << 30) | (b >>> 2);\n                b = a;\n                a = t;\n            }\n\n            // Intermediate hash value\n            H[0] = (H[0] + a) | 0;\n            H[1] = (H[1] + b) | 0;\n            H[2] = (H[2] + c) | 0;\n            H[3] = (H[3] + d) | 0;\n            H[4] = (H[4] + e) | 0;\n        },\n\n        _doFinalize: function () {\n            // Shortcuts\n            var data = this._data;\n            var dataWords = data.words;\n\n            var nBitsTotal = this._nDataBytes * 8;\n            var nBitsLeft = data.sigBytes * 8;\n\n            // Add padding\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n            data.sigBytes = dataWords.length * 4;\n\n            // Hash final blocks\n            this._process();\n\n            // Return final computed hash\n            return this._hash;\n        },\n\n        clone: function () {\n            var clone = Hasher.clone.call(this);\n            clone._hash = this._hash.clone();\n\n            return clone;\n        }\n    });\n\n    /**\n     * Shortcut function to the hasher's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     *\n     * @return {WordArray} The hash.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hash = CryptoJS.SHA1('message');\n     *     var hash = CryptoJS.SHA1(wordArray);\n     */\n    C.SHA1 = Hasher._createHelper(SHA1);\n\n    /**\n     * Shortcut function to the HMAC's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     * @param {WordArray|string} key The secret key.\n     *\n     * @return {WordArray} The HMAC.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\n     */\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n}());\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function (Math) {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Initialization and round constants tables\r\n    var H = [];\r\n    var K = [];\r\n\r\n    // Compute constants\r\n    (function () {\r\n        function isPrime(n) {\r\n            var sqrtN = Math.sqrt(n);\r\n            for (var factor = 2; factor <= sqrtN; factor++) {\r\n                if (!(n % factor)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function getFractionalBits(n) {\r\n            return ((n - (n | 0)) * 0x100000000) | 0;\r\n        }\r\n\r\n        var n = 2;\r\n        var nPrime = 0;\r\n        while (nPrime < 64) {\r\n            if (isPrime(n)) {\r\n                if (nPrime < 8) {\r\n                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n                }\r\n                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n                nPrime++;\r\n            }\r\n\r\n            n++;\r\n        }\r\n    }());\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-256 hash algorithm.\r\n     */\r\n    var SHA256 = C_algo.SHA256 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init(H.slice(0));\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n            var f = H[5];\r\n            var g = H[6];\r\n            var h = H[7];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 64; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var gamma0x = W[i - 15];\r\n                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n                                   (gamma0x >>> 3);\r\n\r\n                    var gamma1x = W[i - 2];\r\n                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n                                   (gamma1x >>> 10);\r\n\r\n                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n                }\r\n\r\n                var ch  = (e & f) ^ (~e & g);\r\n                var maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n                var t1 = h + sigma1 + ch + K[i] + W[i];\r\n                var t2 = sigma0 + maj;\r\n\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = (d + t1) | 0;\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = (t1 + t2) | 0;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n            H[5] = (H[5] + f) | 0;\r\n            H[6] = (H[6] + g) | 0;\r\n            H[7] = (H[7] + h) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA256('message');\r\n     *     var hash = CryptoJS.SHA256(wordArray);\r\n     */\r\n    C.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n     */\r\n    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Check if typed arrays are supported\r\n    if (typeof ArrayBuffer != 'function') {\r\n        return;\r\n    }\r\n\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n\r\n    // Reference original init\r\n    var superInit = WordArray.init;\r\n\r\n    // Augment WordArray.init to handle typed arrays\r\n    var subInit = WordArray.init = function (typedArray) {\r\n        // Convert buffers to uint8\r\n        if (typedArray instanceof ArrayBuffer) {\r\n            typedArray = new Uint8Array(typedArray);\r\n        }\r\n\r\n        // Convert other array views to uint8\r\n        if (\r\n            typedArray instanceof Int8Array ||\r\n            typedArray instanceof Uint8ClampedArray ||\r\n            typedArray instanceof Int16Array ||\r\n            typedArray instanceof Uint16Array ||\r\n            typedArray instanceof Int32Array ||\r\n            typedArray instanceof Uint32Array ||\r\n            typedArray instanceof Float32Array ||\r\n            typedArray instanceof Float64Array\r\n        ) {\r\n            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\r\n        }\r\n\r\n        // Handle Uint8Array\r\n        if (typedArray instanceof Uint8Array) {\r\n            // Shortcut\r\n            var typedArrayByteLength = typedArray.byteLength;\r\n\r\n            // Extract bytes\r\n            var words = [];\r\n            for (var i = 0; i < typedArrayByteLength; i++) {\r\n                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            // Initialize this word array\r\n            superInit.call(this, words, typedArrayByteLength);\r\n        } else {\r\n            // Else call normal init\r\n            superInit.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    subInit.prototype = WordArray;\r\n}());\r\n","/*globals qq */\nqq.s3 = qq.s3 || {};\n\nqq.s3.util = qq.s3.util || (function() {\n    \"use strict\";\n\n    return {\n        ALGORITHM_PARAM_NAME: \"x-amz-algorithm\",\n\n        AWS_PARAM_PREFIX: \"x-amz-meta-\",\n\n        CREDENTIAL_PARAM_NAME: \"x-amz-credential\",\n\n        DATE_PARAM_NAME: \"x-amz-date\",\n\n        REDUCED_REDUNDANCY_PARAM_NAME: \"x-amz-storage-class\",\n        REDUCED_REDUNDANCY_PARAM_VALUE: \"REDUCED_REDUNDANCY\",\n\n        SERVER_SIDE_ENCRYPTION_PARAM_NAME: \"x-amz-server-side-encryption\",\n        SERVER_SIDE_ENCRYPTION_PARAM_VALUE: \"AES256\",\n\n        SESSION_TOKEN_PARAM_NAME: \"x-amz-security-token\",\n\n        V4_ALGORITHM_PARAM_VALUE: \"AWS4-HMAC-SHA256\",\n\n        V4_SIGNATURE_PARAM_NAME: \"x-amz-signature\",\n\n        CASE_SENSITIVE_PARAM_NAMES: [\n            \"Cache-Control\",\n            \"Content-Disposition\",\n            \"Content-Encoding\",\n            \"Content-MD5\"\n        ],\n\n        UNSIGNABLE_REST_HEADER_NAMES: [\n            \"Cache-Control\",\n            \"Content-Disposition\",\n            \"Content-Encoding\",\n            \"Content-MD5\"\n        ],\n\n        UNPREFIXED_PARAM_NAMES: [\n            \"Cache-Control\",\n            \"Content-Disposition\",\n            \"Content-Encoding\",\n            \"Content-MD5\",\n            \"x-amz-server-side-encryption-customer-algorithm\",\n            \"x-amz-server-side-encryption-customer-key\",\n            \"x-amz-server-side-encryption-customer-key-MD5\"\n        ],\n\n        /**\n         * This allows for the region to be specified in the bucket's endpoint URL, or not.\n         *\n         * Examples of some valid endpoints are:\n         *     http://foo.s3.amazonaws.com\n         *     https://foo.s3.amazonaws.com\n         *     http://foo.s3-ap-northeast-1.amazonaws.com\n         *     foo.s3.amazonaws.com\n         *     http://foo.bar.com\n         *     http://s3.amazonaws.com/foo.bar.com\n         * ...etc\n         *\n         * @param endpoint The bucket's URL.\n         * @returns {String || undefined} The bucket name, or undefined if the URL cannot be parsed.\n         */\n        getBucket: function(endpoint) {\n            var patterns = [\n                    //bucket in domain\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)\\.s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com/i,\n                    //bucket in path\n                    /^(?:https?:\\/\\/)?s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com\\/([a-z0-9.\\-_]+)/i,\n                    //custom domain\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)/i\n                ],\n                bucket;\n\n            qq.each(patterns, function(idx, pattern) {\n                var match = pattern.exec(endpoint);\n\n                if (match) {\n                    bucket = match[1];\n                    return false;\n                }\n            });\n\n            return bucket;\n        },\n\n        /** Create Prefixed request headers which are appropriate for S3.\n         *\n         * If the request header is appropriate for S3 (e.g. Cache-Control) then pass\n         * it along without a metadata prefix. For all other request header parameter names,\n         * apply qq.s3.util.AWS_PARAM_PREFIX before the name.\n         * See: http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\n         */\n        _getPrefixedParamName: function(name) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                return name;\n            }\n            return qq.s3.util.AWS_PARAM_PREFIX + name;\n        },\n\n        /**\n         * Create a policy document to be signed and sent along with the S3 upload request.\n         *\n         * @param spec Object with properties use to construct the policy document.\n         * @returns {Object} Policy doc.\n         */\n        getPolicy: function(spec) {\n            var policy = {},\n                conditions = [],\n                bucket = spec.bucket,\n                date = spec.date,\n                drift = spec.clockDrift,\n                key = spec.key,\n                accessKey = spec.accessKey,\n                acl = spec.acl,\n                type = spec.type,\n                expectedStatus = spec.expectedStatus,\n                sessionToken = spec.sessionToken,\n                params = spec.params,\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\n                minFileSize = spec.minFileSize,\n                maxFileSize = spec.maxFileSize,\n                reducedRedundancy = spec.reducedRedundancy,\n                region = spec.region,\n                serverSideEncryption = spec.serverSideEncryption,\n                signatureVersion = spec.signatureVersion;\n\n            policy.expiration = qq.s3.util.getPolicyExpirationDate(date, drift);\n\n            conditions.push({acl: acl});\n            conditions.push({bucket: bucket});\n\n            if (type) {\n                conditions.push({\"Content-Type\": type});\n            }\n\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n            if (expectedStatus) {\n                conditions.push({success_action_status: expectedStatus.toString()});\n            }\n\n            if (successRedirectUrl) {\n                conditions.push({success_action_redirect: successRedirectUrl});\n            }\n            // jscs:enable\n            if (reducedRedundancy) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n            }\n\n            if (sessionToken) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n            }\n\n            if (serverSideEncryption) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n            }\n\n            if (signatureVersion === 2) {\n                conditions.push({key: key});\n            }\n            else if (signatureVersion === 4) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\n\n                conditions.push({});\n                conditions[conditions.length - 1].key = key;\n\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.CREDENTIAL_PARAM_NAME] =\n                    qq.s3.util.getV4CredentialsString({date: date, key: accessKey, region: region});\n\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.DATE_PARAM_NAME] =\n                    qq.s3.util.getV4PolicyDate(date, drift);\n            }\n\n            // user metadata\n            qq.each(params, function(name, val) {\n                var awsParamName = qq.s3.util._getPrefixedParamName(name),\n                    param = {};\n\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\n                    param[awsParamName] = val;\n                }\n                else {\n                    param[awsParamName] = encodeURIComponent(val);\n                }\n\n                conditions.push(param);\n            });\n\n            policy.conditions = conditions;\n\n            qq.s3.util.enforceSizeLimits(policy, minFileSize, maxFileSize);\n\n            return policy;\n        },\n\n        /**\n         * Update a previously constructed policy document with updated credentials.  Currently, this only requires we\n         * update the session token.  This is only relevant if requests are being signed client-side.\n         *\n         * @param policy Live policy document\n         * @param newSessionToken Updated session token.\n         */\n        refreshPolicyCredentials: function(policy, newSessionToken) {\n            var sessionTokenFound = false;\n\n            qq.each(policy.conditions, function(oldCondIdx, oldCondObj) {\n                qq.each(oldCondObj, function(oldCondName, oldCondVal) {\n                    if (oldCondName === qq.s3.util.SESSION_TOKEN_PARAM_NAME) {\n                        oldCondObj[oldCondName] = newSessionToken;\n                        sessionTokenFound = true;\n                    }\n                });\n            });\n\n            if (!sessionTokenFound) {\n                policy.conditions.push({});\n                policy.conditions[policy.conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = newSessionToken;\n            }\n        },\n\n        /**\n         * Generates all parameters to be passed along with the S3 upload request.  This includes invoking a callback\n         * that is expected to asynchronously retrieve a signature for the policy document.  Note that the server\n         * signing the request should reject a \"tainted\" policy document that includes unexpected values, since it is\n         * still possible for a malicious user to tamper with these values during policy document generation,\n         * before it is sent to the server for signing.\n         *\n         * @param spec Object with properties: `params`, `type`, `key`, `accessKey`, `acl`, `expectedStatus`, `successRedirectUrl`,\n         * `reducedRedundancy`, `region`, `serverSideEncryption`, `version`, and `log()`, along with any options associated with `qq.s3.util.getPolicy()`.\n         * @returns {qq.Promise} Promise that will be fulfilled once all parameters have been determined.\n         */\n        generateAwsParams: function(spec, signPolicyCallback) {\n            var awsParams = {},\n                customParams = spec.params,\n                promise = new qq.Promise(),\n                sessionToken = spec.sessionToken,\n                drift = spec.clockDrift,\n                type = spec.type,\n                key = spec.key,\n                accessKey = spec.accessKey,\n                acl = spec.acl,\n                expectedStatus = spec.expectedStatus,\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\n                reducedRedundancy = spec.reducedRedundancy,\n                region = spec.region,\n                serverSideEncryption = spec.serverSideEncryption,\n                signatureVersion = spec.signatureVersion,\n                now = new Date(),\n                log = spec.log,\n                policyJson;\n\n            spec.date = now;\n            policyJson = qq.s3.util.getPolicy(spec);\n\n            awsParams.key = key;\n\n            if (type) {\n                awsParams[\"Content-Type\"] = type;\n            }\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n            if (expectedStatus) {\n                awsParams.success_action_status = expectedStatus;\n            }\n\n            if (successRedirectUrl) {\n                awsParams.success_action_redirect = successRedirectUrl;\n            }\n            // jscs:enable\n            if (reducedRedundancy) {\n                awsParams[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n            }\n\n            if (serverSideEncryption) {\n                awsParams[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n            }\n\n            if (sessionToken) {\n                awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n            }\n\n            awsParams.acl = acl;\n\n            // Custom (user-supplied) params must be prefixed with the value of `qq.s3.util.AWS_PARAM_PREFIX`.\n            // Params such as Cache-Control or Content-Disposition will not be prefixed.\n            // Prefixed param values will be URI encoded as well.\n            qq.each(customParams, function(name, val) {\n                var awsParamName = qq.s3.util._getPrefixedParamName(name);\n\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\n                    awsParams[awsParamName] = val;\n                }\n                else {\n                    awsParams[awsParamName] = encodeURIComponent(val);\n                }\n            });\n\n            if (signatureVersion === 2) {\n                awsParams.AWSAccessKeyId = accessKey;\n            }\n            else if (signatureVersion === 4) {\n                awsParams[qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\n                awsParams[qq.s3.util.CREDENTIAL_PARAM_NAME] = qq.s3.util.getV4CredentialsString({date: now, key: accessKey, region: region});\n                awsParams[qq.s3.util.DATE_PARAM_NAME] = qq.s3.util.getV4PolicyDate(now, drift);\n            }\n\n            // Invoke a promissory callback that should provide us with a base64-encoded policy doc and an\n            // HMAC signature for the policy doc.\n            signPolicyCallback(policyJson).then(\n                function(policyAndSignature, updatedAccessKey, updatedSessionToken) {\n                    awsParams.policy = policyAndSignature.policy;\n\n                    if (spec.signatureVersion === 2) {\n                        awsParams.signature = policyAndSignature.signature;\n\n                        if (updatedAccessKey) {\n                            awsParams.AWSAccessKeyId = updatedAccessKey;\n                        }\n                    }\n                    else if (spec.signatureVersion === 4) {\n                        awsParams[qq.s3.util.V4_SIGNATURE_PARAM_NAME] = policyAndSignature.signature;\n                    }\n\n                    if (updatedSessionToken) {\n                        awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\n                    }\n\n                    promise.success(awsParams);\n                },\n                function(errorMessage) {\n                    errorMessage = errorMessage || \"Can't continue further with request to S3 as we did not receive \" +\n                                                   \"a valid signature and policy from the server.\";\n\n                    log(\"Policy signing failed.  \" + errorMessage, \"error\");\n                    promise.failure(errorMessage);\n                }\n            );\n\n            return promise;\n        },\n\n        /**\n         * Add a condition to an existing S3 upload request policy document used to ensure AWS enforces any size\n         * restrictions placed on files server-side.  This is important to do, in case users mess with the client-side\n         * checks already in place.\n         *\n         * @param policy Policy document as an `Object`, with a `conditions` property already attached\n         * @param minSize Minimum acceptable size, in bytes\n         * @param maxSize Maximum acceptable size, in bytes (0 = unlimited)\n         */\n        enforceSizeLimits: function(policy, minSize, maxSize) {\n            var adjustedMinSize = minSize < 0 ? 0 : minSize,\n                // Adjust a maxSize of 0 to the largest possible integer, since we must specify a high and a low in the request\n                adjustedMaxSize = maxSize <= 0 ? 9007199254740992 : maxSize;\n\n            if (minSize > 0 || maxSize > 0) {\n                policy.conditions.push([\"content-length-range\", adjustedMinSize.toString(), adjustedMaxSize.toString()]);\n            }\n        },\n\n        getPolicyExpirationDate: function(date, drift) {\n            var adjustedDate = new Date(date.getTime() + drift);\n            return qq.s3.util.getPolicyDate(adjustedDate, 5);\n        },\n\n        getCredentialsDate: function(date) {\n            return date.getUTCFullYear() + \"\" +\n                (\"0\" + (date.getUTCMonth() + 1)).slice(-2) +\n                (\"0\" + date.getUTCDate()).slice(-2);\n        },\n\n        getPolicyDate: function(date, _minutesToAdd_) {\n            var minutesToAdd = _minutesToAdd_ || 0,\n                pad, r;\n\n            /*jshint -W014 */\n            // Is this going to be a problem if we encounter this moments before 2 AM just before daylight savings time ends?\n            date.setMinutes(date.getMinutes() + (minutesToAdd || 0));\n\n            if (Date.prototype.toISOString) {\n                return date.toISOString();\n            }\n            else {\n                pad = function(number) {\n                    r = String(number);\n\n                    if (r.length === 1) {\n                        r = \"0\" + r;\n                    }\n\n                    return r;\n                };\n\n                return date.getUTCFullYear()\n                    + \"-\" + pad(date.getUTCMonth() + 1)\n                    + \"-\" + pad(date.getUTCDate())\n                    + \"T\" + pad(date.getUTCHours())\n                    + \":\" + pad(date.getUTCMinutes())\n                    + \":\" + pad(date.getUTCSeconds())\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\n                    + \"Z\";\n            }\n        },\n\n        /**\n         * Looks at a response from S3 contained in an iframe and parses the query string in an attempt to identify\n         * the associated resource.\n         *\n         * @param iframe Iframe containing response\n         * @returns {{bucket: *, key: *, etag: *}}\n         */\n        parseIframeResponse: function(iframe) {\n            var doc = iframe.contentDocument || iframe.contentWindow.document,\n                queryString = doc.location.search,\n                match = /bucket=(.+)&key=(.+)&etag=(.+)/.exec(queryString);\n\n            if (match) {\n                return {\n                    bucket: match[1],\n                    key: match[2],\n                    etag: match[3].replace(/%22/g, \"\")\n                };\n            }\n        },\n\n        /**\n         * @param successRedirectUrl Relative or absolute location of success redirect page\n         * @returns {*|string} undefined if the parameter is undefined, otherwise the absolute location of the success redirect page\n         */\n        getSuccessRedirectAbsoluteUrl: function(successRedirectUrl) {\n            if (successRedirectUrl) {\n                var targetAnchorContainer = document.createElement(\"div\"),\n                    targetAnchor;\n\n                if (qq.ie7()) {\n                    // Note that we must make use of `innerHTML` for IE7 only instead of simply creating an anchor via\n                    // `document.createElement('a')` and setting the `href` attribute.  The latter approach does not allow us to\n                    // obtain an absolute URL in IE7 if the `endpoint` is a relative URL.\n                    targetAnchorContainer.innerHTML = \"<a href='\" + successRedirectUrl + \"'></a>\";\n                    targetAnchor = targetAnchorContainer.firstChild;\n                    return targetAnchor.href;\n                }\n                else {\n                    // IE8 and IE9 do not seem to derive an absolute URL from a relative URL using the `innerHTML`\n                    // approach above, so we'll just create an anchor this way and set it's `href` attribute.\n                    // Due to yet another quirk in IE8 and IE9, we have to set the `href` equal to itself\n                    // in order to ensure relative URLs will be properly parsed.\n                    targetAnchor = document.createElement(\"a\");\n                    targetAnchor.href = successRedirectUrl;\n                    targetAnchor.href = targetAnchor.href;\n                    return targetAnchor.href;\n                }\n            }\n        },\n\n        getV4CredentialsString: function(spec) {\n            return spec.key + \"/\" +\n                qq.s3.util.getCredentialsDate(spec.date) + \"/\" +\n                spec.region + \"/s3/aws4_request\";\n        },\n\n        getV4PolicyDate: function(date, drift) {\n            var adjustedDate = new Date(date.getTime() + drift);\n\n            return qq.s3.util.getCredentialsDate(adjustedDate) + \"T\" +\n                    (\"0\" + adjustedDate.getUTCHours()).slice(-2) +\n                    (\"0\" + adjustedDate.getUTCMinutes()).slice(-2) +\n                    (\"0\" + adjustedDate.getUTCSeconds()).slice(-2) +\n                    \"Z\";\n        },\n\n        // AWS employs a strict interpretation of [RFC 3986](http://tools.ietf.org/html/rfc3986#page-12).\n        // So, we must ensure all reserved characters listed in the spec are percent-encoded,\n        // and spaces are replaced with \"+\".\n        encodeQueryStringParam: function(param) {\n            var percentEncoded = encodeURIComponent(param);\n\n            // %-encode characters not handled by `encodeURIComponent` (to follow RFC 3986)\n            percentEncoded = percentEncoded.replace(/[!'()]/g, escape);\n\n            // %-encode characters not handled by `escape` (to follow RFC 3986)\n            percentEncoded = percentEncoded.replace(/\\*/g, \"%2A\");\n\n            // replace percent-encoded spaces with a \"+\"\n            return percentEncoded.replace(/%20/g, \"+\");\n        },\n        /**\n         * Escapes url part as for AWS requirements\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\n         */\n        uriEscape: function(string) {\n            var output = encodeURIComponent(string);\n            output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\n            output = output.replace(/[*]/g, function(ch) {\n                return \"%\" + ch.charCodeAt(0).toString(16).toUpperCase();\n            });\n            return output;\n        },\n        /**\n         * Escapes a path as for AWS requirement\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\n         */\n        uriEscapePath: function(path) {\n            var parts = [];\n            qq.each(path.split(\"/\"), function(idx, item) {\n                parts.push(qq.s3.util.uriEscape(item));\n            });\n            return parts.join(\"/\");\n        }\n    };\n}());\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to S3.\n * Some inherited options and API methods have a special meaning in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploaderBasic = function(o) {\n        var options = {\n            request: {\n                // public key (required for server-side signing, ignored if `credentials` have been provided)\n                accessKey: null,\n\n                // padding, in milliseconds, to add to the x-amz-date header & the policy expiration date\n                clockDrift: 0\n            },\n\n            objectProperties: {\n                acl: \"private\",\n\n                // string or a function which may be promissory\n                bucket: qq.bind(function(id) {\n                    return qq.s3.util.getBucket(this.getEndpoint(id));\n                }, this),\n\n                // string or a function which may be promissory - only used for V4 multipart uploads\n                host: qq.bind(function(id) {\n                    return (/(?:http|https):\\/\\/(.+)(?:\\/.+)?/).exec(this._endpointStore.get(id))[1];\n                }, this),\n\n                // 'uuid', 'filename', or a function which may be promissory\n                key: \"uuid\",\n\n                reducedRedundancy: false,\n\n                // Defined at http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\n                region: \"us-east-1\",\n\n                serverSideEncryption: false\n            },\n\n            credentials: {\n                // Public key (required).\n                accessKey: null,\n                // Private key (required).\n                secretKey: null,\n                // Expiration date for the credentials (required).  May be an ISO string or a `Date`.\n                expiration: null,\n                // Temporary credentials session token.\n                // Only required for temporary credentials obtained via AssumeRoleWithWebIdentity.\n                sessionToken: null\n            },\n\n            // All but `version` are ignored if `credentials` is provided.\n            signature: {\n                customHeaders: {},\n                endpoint: null,\n                version: 2\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            // required if non-File-API browsers, such as IE9 and older, are used\n            iframeSupport: {\n                localBlankPagePath: null\n            },\n\n            chunking: {\n                // minimum part size is 5 MiB when uploading to S3\n                partSize: 5242880\n            },\n\n            cors: {\n                allowXdr: true\n            },\n\n            callbacks: {\n                onCredentialsExpired: function() {}\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        if (!this.setCredentials(options.credentials, true)) {\n            this._currentCredentials.accessKey = options.request.accessKey;\n        }\n\n        this._aclStore = this._createStore(options.objectProperties.acl);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds S3 keys for file representations constructed from a session request.\n        this._cannedKeys = {};\n        // Holds S3 buckets for file representations constructed from a session request.\n        this._cannedBuckets = {};\n\n        this._buckets = {};\n        this._hosts = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, {\n        getBucket: function(id) {\n            if (this._cannedBuckets[id] == null) {\n                return this._buckets[id];\n            }\n            return this._cannedBuckets[id];\n        },\n\n        /**\n         * @param id File ID\n         * @returns {*} Key name associated w/ the file, if one exists\n         */\n        getKey: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedKeys[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n\n            return this._cannedKeys[id];\n        },\n\n        /**\n         * Override the parent's reset function to cleanup various S3-related items.\n         */\n        reset: function() {\n            qq.FineUploaderBasic.prototype.reset.call(this);\n            this._failedSuccessRequestCallbacks = [];\n            this._buckets = {};\n            this._hosts = {};\n        },\n\n        setCredentials: function(credentials, ignoreEmpty) {\n            if (credentials && credentials.secretKey) {\n                if (!credentials.accessKey) {\n                    throw new qq.Error(\"Invalid credentials: no accessKey\");\n                }\n                else if (!credentials.expiration) {\n                    throw new qq.Error(\"Invalid credentials: no expiration\");\n                }\n                else {\n                    this._currentCredentials = qq.extend({}, credentials);\n\n                    // Ensure expiration is a `Date`.  If initially a string, assuming it is in ISO format.\n                    if (qq.isString(credentials.expiration)) {\n                        this._currentCredentials.expiration = new Date(credentials.expiration);\n                    }\n                }\n\n                return true;\n            }\n            else if (!ignoreEmpty) {\n                throw new qq.Error(\"Invalid credentials parameter!\");\n            }\n            else {\n                this._currentCredentials = {};\n            }\n        },\n\n        setAcl: function(acl, id) {\n            this._aclStore.set(acl, id);\n        },\n\n        /**\n         * Ensures the parent's upload handler creator passes any additional S3-specific options to the handler as well\n         * as information required to instantiate the specific handler based on the current browser's capabilities.\n         *\n         * @returns {qq.UploadHandlerController}\n         * @private\n         */\n        _createUploadHandler: function() {\n            var self = this,\n                additionalOptions = {\n                    aclStore: this._aclStore,\n                    getBucket: qq.bind(this._determineBucket, this),\n                    getHost: qq.bind(this._determineHost, this),\n                    getKeyName: qq.bind(this._determineKeyName, this),\n                    iframeSupport: this._options.iframeSupport,\n                    objectProperties: this._options.objectProperties,\n                    signature: this._options.signature,\n                    clockDrift: this._options.request.clockDrift,\n                    // pass size limit validation values to include in the request so AWS enforces this server-side\n                    validation: {\n                        minSizeLimit: this._options.validation.minSizeLimit,\n                        maxSizeLimit: this._options.validation.sizeLimit\n                    }\n                };\n\n            // We assume HTTP if it is missing from the start of the endpoint string.\n            qq.override(this._endpointStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var endpoint = super_.get(id);\n\n                        if (endpoint.indexOf(\"http\") < 0) {\n                            return \"http://\" + endpoint;\n                        }\n\n                        return endpoint;\n                    }\n                };\n            });\n\n            // Some param names should be lower case to avoid signature mismatches\n            qq.override(this._paramsStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var oldParams = super_.get(id),\n                            modifiedParams = {};\n\n                        qq.each(oldParams, function(name, val) {\n                            var paramName = name;\n\n                            if (qq.indexOf(qq.s3.util.CASE_SENSITIVE_PARAM_NAMES, paramName) < 0) {\n                                paramName = paramName.toLowerCase();\n                            }\n\n                            modifiedParams[paramName] = qq.isFunction(val) ? val() : val;\n                        });\n\n                        return modifiedParams;\n                    }\n                };\n            });\n\n            additionalOptions.signature.credentialsProvider = {\n                get: function() {\n                    return self._currentCredentials;\n                },\n\n                onExpired: function() {\n                    var updateCredentials = new qq.Promise(),\n                        callbackRetVal = self._options.callbacks.onCredentialsExpired();\n\n                    if (qq.isGenericPromise(callbackRetVal)) {\n                        callbackRetVal.then(function(credentials) {\n                            try {\n                                self.setCredentials(credentials);\n                                updateCredentials.success();\n                            }\n                            catch (error) {\n                                self.log(\"Invalid credentials returned from onCredentialsExpired callback! (\" + error.message + \")\", \"error\");\n                                updateCredentials.failure(\"onCredentialsExpired did not return valid credentials.\");\n                            }\n                        }, function(errorMsg) {\n                            self.log(\"onCredentialsExpired callback indicated failure! (\" + errorMsg + \")\", \"error\");\n                            updateCredentials.failure(\"onCredentialsExpired callback failed.\");\n                        });\n                    }\n                    else {\n                        self.log(\"onCredentialsExpired callback did not return a promise!\", \"error\");\n                        updateCredentials.failure(\"Unexpected return value for onCredentialsExpired.\");\n                    }\n\n                    return updateCredentials;\n                }\n            };\n\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this, additionalOptions, \"s3\");\n        },\n\n        _determineObjectPropertyValue: function(id, property) {\n            var maybe = this._options.objectProperties[property],\n                promise = new qq.Promise(),\n                self = this;\n\n            if (qq.isFunction(maybe)) {\n                maybe = maybe(id);\n                if (qq.isGenericPromise(maybe)) {\n                    promise = maybe;\n                }\n                else {\n                    promise.success(maybe);\n                }\n            }\n            else if (qq.isString(maybe)) {\n                promise.success(maybe);\n            }\n\n            promise.then(\n                function success(value) {\n                    self[\"_\" + property + \"s\"][id] = value;\n                },\n\n                function failure(errorMsg) {\n                    qq.log(\"Problem determining \" + property + \" for ID \" + id + \" (\" + errorMsg + \")\", \"error\");\n                }\n            );\n\n            return promise;\n        },\n\n        _determineBucket: function(id) {\n            return this._determineObjectPropertyValue(id, \"bucket\");\n        },\n\n        _determineHost: function(id) {\n            return this._determineObjectPropertyValue(id, \"host\");\n        },\n\n        /**\n         * Determine the file's key name and passes it to the caller via a promissory callback.  This also may\n         * delegate to an integrator-defined function that determines the file's key name on demand,\n         * which also may be promissory.\n         *\n         * @param id ID of the file\n         * @param filename Name of the file\n         * @returns {qq.Promise} A promise that will be fulfilled when the key name has been determined (and will be passed to the caller via the success callback).\n         * @private\n         */\n        _determineKeyName: function(id, filename) {\n            /*jshint -W015*/\n            var promise = new qq.Promise(),\n                keynameLogic = this._options.objectProperties.key,\n                extension = qq.getExtension(filename),\n                onGetKeynameFailure = promise.failure,\n                onGetKeynameSuccess = function(keyname, extension) {\n                    var keynameToUse = keyname;\n\n                    if (extension !== undefined) {\n                        keynameToUse += \".\" + extension;\n                    }\n\n                    promise.success(keynameToUse);\n                };\n\n            switch (keynameLogic) {\n                case \"uuid\":\n                    onGetKeynameSuccess(this.getUuid(id), extension);\n                    break;\n                case \"filename\":\n                    onGetKeynameSuccess(filename);\n                    break;\n                default:\n                    if (qq.isFunction(keynameLogic)) {\n                        this._handleKeynameFunction(keynameLogic, id, onGetKeynameSuccess, onGetKeynameFailure);\n                    }\n                    else {\n                        this.log(keynameLogic + \" is not a valid value for the s3.keyname option!\", \"error\");\n                        onGetKeynameFailure();\n                    }\n            }\n\n            return promise;\n        },\n\n        /**\n         * Called by the internal onUpload handler if the integrator has supplied a function to determine\n         * the file's key name.  The integrator's function may be promissory.  We also need to fulfill\n         * the promise contract associated with the caller as well.\n         *\n         * @param keynameFunc Integrator-supplied function that must be executed to determine the key name.  May be promissory.\n         * @param id ID of the associated file\n         * @param successCallback Invoke this if key name retrieval is successful, passing in the key name.\n         * @param failureCallback Invoke this if key name retrieval was unsuccessful.\n         * @private\n         */\n        _handleKeynameFunction: function(keynameFunc, id, successCallback, failureCallback) {\n            var self = this,\n                onSuccess = function(keyname) {\n                    successCallback(keyname);\n                },\n                onFailure = function(reason) {\n                    self.log(qq.format(\"Failed to retrieve key name for {}.  Reason: {}\", id, reason || \"null\"), \"error\");\n                    failureCallback(reason);\n                },\n                keyname = keynameFunc.call(this, id);\n\n            if (qq.isGenericPromise(keyname)) {\n                keyname.then(onSuccess, onFailure);\n            }\n            /*jshint -W116*/\n            else if (keyname == null) {\n                onFailure();\n            }\n            else {\n                onSuccess(keyname);\n            }\n        },\n\n        _getEndpointSpecificParams: function(id, response, maybeXhr) {\n            var params = {\n                key: this.getKey(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                bucket: this.getBucket(id)\n            };\n\n            if (maybeXhr && maybeXhr.getResponseHeader(\"ETag\")) {\n                params.etag = maybeXhr.getResponseHeader(\"ETag\");\n            }\n            else if (response.etag) {\n                params.etag = response.etag;\n            }\n\n            return params;\n        },\n\n        // Hooks into the base internal `_onSubmitDelete` to add key and bucket params to the delete file request.\n        _onSubmitDelete: function(id, onSuccessCallback) {\n            var additionalMandatedParams = {\n                key: this.getKey(id),\n                bucket: this.getBucket(id)\n            };\n\n            return qq.FineUploaderBasic.prototype._onSubmitDelete.call(this, id, onSuccessCallback, additionalMandatedParams);\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.s3Key == null) {\n                throw new qq.Error(\"Did not find s3Key property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedKeys[id] = sessionData.s3Key;\n                this._cannedBuckets[id] = sessionData.s3Bucket;\n            }\n\n            return id;\n        }\n    });\n}());\n","/* globals qq, CryptoJS */\n\n// IE 10 does not support Uint8ClampedArray. We don't need it, but CryptoJS attempts to reference it\n// inside a conditional via an instanceof check, which breaks S3 v4 signatures for chunked uploads.\nif (!window.Uint8ClampedArray) {\n    window.Uint8ClampedArray = function() {};\n}\n/**\n * Handles signature determination for HTML Form Upload requests and Multipart Uploader requests (via the S3 REST API).\n *\n * If the S3 requests are to be signed server side, this module will send a POST request to the server in an attempt\n * to solicit signatures for various S3-related requests.  This module also parses the response and attempts\n * to determine if the effort was successful.\n *\n * If the S3 requests are to be signed client-side, without the help of a server, this module will utilize CryptoJS to\n * sign the requests directly in the browser and send them off to S3.\n *\n * @param o Options associated with all such requests\n * @returns {{getSignature: Function}} API method used to initiate the signature request.\n * @constructor\n */\nqq.s3.RequestSigner = function(o) {\n    \"use strict\";\n\n    var requester,\n        thisSignatureRequester = this,\n        pendingSignatures = {},\n        options = {\n            expectingPolicy: false,\n            method: \"POST\",\n            signatureSpec: {\n                drift: 0,\n                credentialsProvider: {},\n                endpoint: null,\n                customHeaders: {},\n                version: 2\n            },\n            maxConnections: 3,\n            endpointStore: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        },\n        credentialsProvider,\n\n        generateHeaders = function(signatureConstructor, signature, promise) {\n            var headers = signatureConstructor.getHeaders();\n\n            if (options.signatureSpec.version === 4) {\n                headers.Authorization = qq.s3.util.V4_ALGORITHM_PARAM_VALUE +\n                    \" Credential=\" + options.signatureSpec.credentialsProvider.get().accessKey + \"/\" +\n                    qq.s3.util.getCredentialsDate(signatureConstructor.getRequestDate()) + \"/\" +\n                    options.signatureSpec.region + \"/\" +\n                    \"s3/aws4_request,\" +\n                    \"SignedHeaders=\" + signatureConstructor.getSignedHeaders() + \",\" +\n                    \"Signature=\" + signature;\n            }\n            else {\n                headers.Authorization = \"AWS \" + options.signatureSpec.credentialsProvider.get().accessKey + \":\" + signature;\n            }\n\n            promise.success(headers, signatureConstructor.getEndOfUrl());\n        },\n\n        v2 = {\n            getStringToSign: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n\\n{}/{}/{}\",\n                    signatureSpec.method,\n                    signatureSpec.contentMd5 || \"\",\n                    signatureSpec.contentType || \"\",\n                    signatureSpec.headersStr || \"\\n\",\n                    signatureSpec.bucket,\n                    signatureSpec.endOfUrl);\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var headersWordArray = qq.CryptoJS.enc.Utf8.parse(headersStr),\n                    headersHmacSha1 = qq.CryptoJS.HmacSHA1(headersWordArray, credentialsProvider.get().secretKey),\n                    headersHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(headersHmacSha1);\n\n                generateHeaders(signatureConstructor, headersHmacSha1Base64, signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    policyHmacSha1 = qq.CryptoJS.HmacSHA1(base64Policy, credentialsProvider.get().secretKey),\n                    policyHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(policyHmacSha1);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: policyHmacSha1Base64\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        },\n\n        v4 = {\n            getCanonicalQueryString: function(endOfUri) {\n                var queryParamIdx = endOfUri.indexOf(\"?\"),\n                    canonicalQueryString = \"\",\n                    encodedQueryParams, encodedQueryParamNames, queryStrings;\n\n                if (queryParamIdx >= 0) {\n                    encodedQueryParams = {};\n                    queryStrings = endOfUri.substr(queryParamIdx + 1).split(\"&\");\n\n                    qq.each(queryStrings, function(idx, queryString) {\n                        var nameAndVal = queryString.split(\"=\"),\n                            paramVal = nameAndVal[1];\n\n                        if (paramVal == null) {\n                            paramVal = \"\";\n                        }\n\n                        encodedQueryParams[encodeURIComponent(nameAndVal[0])] = encodeURIComponent(paramVal);\n                    });\n\n                    encodedQueryParamNames = Object.keys(encodedQueryParams).sort();\n                    encodedQueryParamNames.forEach(function(encodedQueryParamName, idx) {\n                        canonicalQueryString += encodedQueryParamName + \"=\" + encodedQueryParams[encodedQueryParamName];\n                        if (idx < encodedQueryParamNames.length - 1) {\n                            canonicalQueryString += \"&\";\n                        }\n                    });\n                }\n\n                return canonicalQueryString;\n            },\n\n            getCanonicalRequest: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n{}\\n{}\\n{}\",\n                    signatureSpec.method,\n                    v4.getCanonicalUri(signatureSpec.endOfUrl),\n                    v4.getCanonicalQueryString(signatureSpec.endOfUrl),\n                    signatureSpec.headersStr || \"\\n\",\n                    v4.getSignedHeaders(signatureSpec.headerNames),\n                    signatureSpec.hashedContent);\n            },\n\n            getCanonicalUri: function(endOfUri) {\n                var path = endOfUri,\n                    queryParamIdx = endOfUri.indexOf(\"?\");\n\n                if (queryParamIdx > 0) {\n                    path = endOfUri.substr(0, queryParamIdx);\n                }\n                return \"/\" + path;\n            },\n\n            getEncodedHashedPayload: function(body) {\n                var promise = new qq.Promise(),\n                    reader;\n\n                if (qq.isBlob(body)) {\n                    // TODO hash blob in webworker if this becomes a notable perf issue\n                    reader = new FileReader();\n                    reader.onloadend = function(e) {\n                        if (e.target.readyState === FileReader.DONE) {\n                            if (e.target.error) {\n                                promise.failure(e.target.error);\n                            }\n                            else {\n                                var wordArray = qq.CryptoJS.lib.WordArray.create(e.target.result);\n                                promise.success(qq.CryptoJS.SHA256(wordArray).toString());\n                            }\n                        }\n                    };\n                    reader.readAsArrayBuffer(body);\n                }\n                else {\n                    body = body || \"\";\n                    promise.success(qq.CryptoJS.SHA256(body).toString());\n                }\n\n                return promise;\n            },\n\n            getScope: function(date, region) {\n                return qq.s3.util.getCredentialsDate(date) + \"/\" +\n                    region + \"/s3/aws4_request\";\n            },\n\n            getStringToSign: function(signatureSpec) {\n                var canonicalRequest = v4.getCanonicalRequest(signatureSpec),\n                    date = qq.s3.util.getV4PolicyDate(signatureSpec.date, signatureSpec.drift),\n                    hashedRequest = qq.CryptoJS.SHA256(canonicalRequest).toString(),\n                    scope = v4.getScope(signatureSpec.date, options.signatureSpec.region),\n                    stringToSignTemplate = \"AWS4-HMAC-SHA256\\n{}\\n{}\\n{}\";\n\n                return {\n                    hashed: qq.format(stringToSignTemplate, date, scope, hashedRequest),\n                    raw: qq.format(stringToSignTemplate, date, scope, canonicalRequest)\n                };\n            },\n\n            getSignedHeaders: function(headerNames) {\n                var signedHeaders = \"\";\n\n                headerNames.forEach(function(headerName, idx) {\n                    signedHeaders += headerName.toLowerCase();\n\n                    if (idx < headerNames.length - 1) {\n                        signedHeaders += \";\";\n                    }\n                });\n\n                return signedHeaders;\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var secretKey = credentialsProvider.get().secretKey,\n                    headersPattern = /.+\\n.+\\n(\\d+)\\/(.+)\\/s3\\/.+\\n(.+)/,\n                    matches = headersPattern.exec(headersStr),\n                    dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                generateHeaders(signatureConstructor, qq.CryptoJS.HmacSHA256(headersStr, signingKey), signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    secretKey = credentialsProvider.get().secretKey,\n                    credentialPattern = /.+\\/(.+)\\/(.+)\\/s3\\/aws4_request/,\n                    credentialCondition = (function() {\n                        var credential = null;\n                        qq.each(policy.conditions, function(key, condition) {\n                            var val = condition[\"x-amz-credential\"];\n                            if (val) {\n                                credential = val;\n                                return false;\n                            }\n                        });\n                        return credential;\n                    }()),\n                    matches, dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                matches = credentialPattern.exec(credentialCondition);\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: qq.CryptoJS.HmacSHA256(base64Policy, signingKey).toString()\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        };\n\n    qq.extend(options, o, true);\n    credentialsProvider = options.signatureSpec.credentialsProvider;\n\n    function handleSignatureReceived(id, xhrOrXdr, isError) {\n        var responseJson = xhrOrXdr.responseText,\n            pendingSignatureData = pendingSignatures[id],\n            promise = pendingSignatureData.promise,\n            signatureConstructor = pendingSignatureData.signatureConstructor,\n            errorMessage, response;\n\n        delete pendingSignatures[id];\n\n        // Attempt to parse what we would expect to be a JSON response\n        if (responseJson) {\n            try {\n                response = qq.parseJson(responseJson);\n            }\n            catch (error) {\n                options.log(\"Error attempting to parse signature response: \" + error, \"error\");\n            }\n        }\n\n        // If the response is parsable and contains an `error` property, use it as the error message\n        if (response && response.error) {\n            isError = true;\n            errorMessage = response.error;\n        }\n        // If we have received a parsable response, and it has an `invalid` property,\n        // the policy document or request headers may have been tampered with client-side.\n        else if (response && response.invalid) {\n            isError = true;\n            errorMessage = \"Invalid policy document or request headers!\";\n        }\n        // Make sure the response contains policy & signature properties\n        else if (response) {\n            if (options.expectingPolicy && !response.policy) {\n                isError = true;\n                errorMessage = \"Response does not include the base64 encoded policy!\";\n            }\n            else if (!response.signature) {\n                isError = true;\n                errorMessage = \"Response does not include the signature!\";\n            }\n        }\n        // Something unknown went wrong\n        else {\n            isError = true;\n            errorMessage = \"Received an empty or invalid response from the server!\";\n        }\n\n        if (isError) {\n            if (errorMessage) {\n                options.log(errorMessage, \"error\");\n            }\n\n            promise.failure(errorMessage);\n        }\n        else if (signatureConstructor) {\n            generateHeaders(signatureConstructor, response.signature, promise);\n        }\n        else {\n            promise.success(response);\n        }\n    }\n\n    function getStringToSignArtifacts(id, version, requestInfo) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            headerNames = [],\n            headersStr = \"\",\n            now = new Date(),\n            endOfUrl, signatureSpec, toSign,\n\n            generateStringToSign = function(requestInfo) {\n                var contentMd5,\n                    headerIndexesToRemove = [];\n\n                qq.each(requestInfo.headers, function(name) {\n                    headerNames.push(name);\n                });\n                headerNames.sort();\n\n                qq.each(headerNames, function(idx, headerName) {\n                    if (qq.indexOf(qq.s3.util.UNSIGNABLE_REST_HEADER_NAMES, headerName) < 0) {\n                        headersStr += headerName.toLowerCase() + \":\" + requestInfo.headers[headerName].trim() + \"\\n\";\n                    }\n                    else if (headerName === \"Content-MD5\") {\n                        contentMd5 = requestInfo.headers[headerName];\n                    }\n                    else {\n                        headerIndexesToRemove.unshift(idx);\n                    }\n                });\n\n                qq.each(headerIndexesToRemove, function(idx, headerIdx) {\n                    headerNames.splice(headerIdx, 1);\n                });\n\n                signatureSpec = {\n                    bucket: requestInfo.bucket,\n                    contentMd5: contentMd5,\n                    contentType: requestInfo.contentType,\n                    date: now,\n                    drift: options.signatureSpec.drift,\n                    endOfUrl: endOfUrl,\n                    hashedContent: requestInfo.hashedContent,\n                    headerNames: headerNames,\n                    headersStr: headersStr,\n                    method: method\n                };\n\n                toSign = version === 2 ? v2.getStringToSign(signatureSpec) : v4.getStringToSign(signatureSpec);\n\n                return {\n                    date: now,\n                    endOfUrl: endOfUrl,\n                    signedHeaders: version === 4 ? v4.getSignedHeaders(signatureSpec.headerNames) : null,\n                    toSign: version === 4 ? toSign.hashed : toSign,\n                    toSignRaw: version === 4 ? toSign.raw : toSign\n                };\n            };\n\n        /*jshint indent:false */\n        switch (requestInfo.type) {\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_ABORT:\n                method = \"DELETE\";\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_INITIATE:\n                endOfUrl = \"uploads\";\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_COMPLETE:\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_UPLOAD:\n                method = \"PUT\";\n                endOfUrl = qq.format(\"partNumber={}&uploadId={}\", requestInfo.partNum, requestInfo.uploadId);\n                break;\n        }\n\n        endOfUrl = requestInfo.key + \"?\" + endOfUrl;\n\n        if (version === 4) {\n            v4.getEncodedHashedPayload(requestInfo.content).then(function(hashedContent) {\n                requestInfo.headers[\"x-amz-content-sha256\"] = hashedContent;\n                requestInfo.headers.Host = requestInfo.host;\n                requestInfo.headers[\"x-amz-date\"] = qq.s3.util.getV4PolicyDate(now, options.signatureSpec.drift);\n                requestInfo.hashedContent = hashedContent;\n\n                promise.success(generateStringToSign(requestInfo));\n            }, function (err) {\n                promise.failure(err);\n            });\n        }\n        else {\n            promise.success(generateStringToSign(requestInfo));\n        }\n\n        return promise;\n    }\n\n    function determineSignatureClientSide(id, toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        var updatedHeaders;\n\n        // REST API request\n        if (toBeSigned.signatureConstructor) {\n            if (updatedSessionToken) {\n                updatedHeaders = toBeSigned.signatureConstructor.getHeaders();\n                updatedHeaders[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\n                toBeSigned.signatureConstructor.withHeaders(updatedHeaders);\n            }\n\n            toBeSigned.signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                signApiRequest(toBeSigned.signatureConstructor, signatureArtifacts.stringToSign, signatureEffort);\n            }, function (err) {\n                signatureEffort.failure(err);\n            });\n        }\n        // Form upload (w/ policy document)\n        else {\n            updatedSessionToken && qq.s3.util.refreshPolicyCredentials(toBeSigned, updatedSessionToken);\n            signPolicy(toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        if (options.signatureSpec.version === 4) {\n            v4.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n        else {\n            v2.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signApiRequest(signatureConstructor, headersStr, signatureEffort) {\n        if (options.signatureSpec.version === 4) {\n            v4.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n        else {\n            v2.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        contentType: \"application/json; charset=utf-8\",\n        endpointStore: {\n            get: function() {\n                return options.signatureSpec.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.signatureSpec.customHeaders,\n        log: options.log,\n        onComplete: handleSignatureReceived,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * On success, an object containing the parsed JSON response will be passed into the success handler if the\n         * request succeeds.  Otherwise an error message will be passed into the failure method.\n         *\n         * @param id File ID.\n         * @param toBeSigned an Object that holds the item(s) to be signed\n         * @returns {qq.Promise} A promise that is fulfilled when the response has been received.\n         */\n        getSignature: function(id, toBeSigned) {\n            var params = toBeSigned,\n                signatureConstructor = toBeSigned.signatureConstructor,\n                signatureEffort = new qq.Promise(),\n                queryParams;\n\n            if (options.signatureSpec.version === 4) {\n                queryParams = {v4: true};\n            }\n\n            if (credentialsProvider.get().secretKey && qq.CryptoJS) {\n                if (credentialsProvider.get().expiration.getTime() > Date.now()) {\n                    determineSignatureClientSide(id, toBeSigned, signatureEffort);\n                }\n                // If credentials are expired, ask for new ones before attempting to sign request\n                else {\n                    credentialsProvider.onExpired().then(function() {\n                        determineSignatureClientSide(id, toBeSigned,\n                            signatureEffort,\n                            credentialsProvider.get().accessKey,\n                            credentialsProvider.get().sessionToken);\n                    }, function(errorMsg) {\n                        options.log(\"Attempt to update expired credentials apparently failed! Unable to sign request.  \", \"error\");\n                        signatureEffort.failure(\"Unable to sign request - expired credentials.\");\n                    });\n                }\n            }\n            else {\n                options.log(\"Submitting S3 signature request for \" + id);\n\n                if (signatureConstructor) {\n                    signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                        params = {headers: signatureArtifacts.stringToSignRaw};\n                        requester.initTransport(id)\n                            .withParams(params)\n                            .withQueryParams(queryParams)\n                            .send();\n                    }, function (err) {\n                        options.log(\"Failed to construct signature. \", \"error\");\n                        signatureEffort.failure(\"Failed to construct signature.\");\n                    });\n                }\n                else {\n                    requester.initTransport(id)\n                        .withParams(params)\n                        .withQueryParams(queryParams)\n                        .send();\n                }\n\n                pendingSignatures[id] = {\n                    promise: signatureEffort,\n                    signatureConstructor: signatureConstructor\n                };\n            }\n\n            return signatureEffort;\n        },\n\n        constructStringToSign: function(type, bucket, host, key) {\n            var headers = {},\n                uploadId, content, contentType, partNum, artifacts;\n\n            return {\n                withHeaders: function(theHeaders) {\n                    headers = theHeaders;\n                    return this;\n                },\n\n                withUploadId: function(theUploadId) {\n                    uploadId = theUploadId;\n                    return this;\n                },\n\n                withContent: function(theContent) {\n                    content = theContent;\n                    return this;\n                },\n\n                withContentType: function(theContentType) {\n                    contentType = theContentType;\n                    return this;\n                },\n\n                withPartNum: function(thePartNum) {\n                    partNum = thePartNum;\n                    return this;\n                },\n\n                getToSign: function(id) {\n                    var sessionToken = credentialsProvider.get().sessionToken,\n                        promise = new qq.Promise(),\n                        adjustedDate = new Date(Date.now() + options.signatureSpec.drift);\n\n                    headers[\"x-amz-date\"] = adjustedDate.toUTCString();\n\n                    if (sessionToken) {\n                        headers[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n                    }\n\n                    getStringToSignArtifacts(id, options.signatureSpec.version, {\n                        bucket: bucket,\n                        content: content,\n                        contentType: contentType,\n                        headers: headers,\n                        host: host,\n                        key: key,\n                        partNum: partNum,\n                        type: type,\n                        uploadId: uploadId\n                    }).then(function(_artifacts_) {\n                        artifacts = _artifacts_;\n                        promise.success({\n                            headers: (function() {\n                                if (contentType) {\n                                    headers[\"Content-Type\"] = contentType;\n                                }\n\n                                delete headers.Host; // we don't want this to be set on the XHR-initiated request\n                                return headers;\n                            }()),\n                            date: artifacts.date,\n                            endOfUrl: artifacts.endOfUrl,\n                            signedHeaders: artifacts.signedHeaders,\n                            stringToSign: artifacts.toSign,\n                            stringToSignRaw: artifacts.toSignRaw\n                        });\n                    }, function (err) {\n                        promise.failure(err);\n                    });\n\n                    return promise;\n                },\n\n                getHeaders: function() {\n                    return qq.extend({}, headers);\n                },\n\n                getEndOfUrl: function() {\n                    return artifacts && artifacts.endOfUrl;\n                },\n\n                getRequestDate: function() {\n                    return artifacts && artifacts.date;\n                },\n\n                getSignedHeaders: function() {\n                    return artifacts && artifacts.signedHeaders;\n                }\n            };\n        }\n    });\n};\n\nqq.s3.RequestSigner.prototype.REQUEST_TYPE = {\n    MULTIPART_INITIATE: \"multipart_initiate\",\n    MULTIPART_COMPLETE: \"multipart_complete\",\n    MULTIPART_ABORT: \"multipart_abort\",\n    MULTIPART_UPLOAD: \"multipart_upload\"\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Initiate Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html)\n * request to S3 via the REST API.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.s3.InitiateMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingInitiateRequests = {},\n        options = {\n            filenameParam: \"qqfilename\",\n            method: \"POST\",\n            endpointStore: null,\n            paramsStore: null,\n            signatureSpec: null,\n            aclStore: null,\n            reducedRedundancy: false,\n            serverSideEncryption: false,\n            maxConnections: 3,\n            getContentType: function(id) {},\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            getName: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Determine all headers for the \"Initiate MPU\" request, including the \"Authorization\" header, which must be determined\n     * by the local server.  This is a promissory function.  If the server responds with a signature, the headers\n     * (including the Authorization header) will be passed into the success method of the promise.  Otherwise, the failure\n     * method on the promise will be called.\n     *\n     * @param id Associated file ID\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id) {\n        var bucket = options.getBucket(id),\n            host = options.getHost(id),\n            headers = {},\n            promise = new qq.Promise(),\n            key = options.getKey(id),\n            signatureConstructor;\n\n        headers[\"x-amz-acl\"] = options.aclStore.get(id);\n\n        if (options.reducedRedundancy) {\n            headers[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n        }\n\n        if (options.serverSideEncryption) {\n            headers[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n        }\n\n        headers[qq.s3.util.AWS_PARAM_PREFIX + options.filenameParam] = encodeURIComponent(options.getName(id));\n\n        qq.each(options.paramsStore.get(id), function(name, val) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                headers[name] = val;\n            }\n            else {\n                headers[qq.s3.util.AWS_PARAM_PREFIX + name] = encodeURIComponent(val);\n            }\n        });\n\n        signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n            (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_INITIATE, bucket, host, key)\n            .withContentType(options.getContentType(id))\n            .withHeaders(headers);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Initiate MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleInitiateRequestComplete(id, xhr, isError) {\n        var promise = pendingInitiateRequests[id],\n            domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            uploadIdElements, messageElements, uploadId, errorMessage, status;\n\n        delete pendingInitiateRequests[id];\n\n        // The base ajax requester may declare the request to be a failure based on status code.\n        if (isError) {\n            status = xhr.status;\n\n            messageElements = responseDoc.getElementsByTagName(\"Message\");\n            if (messageElements.length > 0) {\n                errorMessage = messageElements[0].textContent;\n            }\n        }\n        // If the base ajax requester has not declared this a failure, make sure we can retrieve the uploadId from the response.\n        else {\n            uploadIdElements = responseDoc.getElementsByTagName(\"UploadId\");\n            if (uploadIdElements.length > 0) {\n                uploadId = uploadIdElements[0].textContent;\n            }\n            else {\n                errorMessage = \"Upload ID missing from request\";\n            }\n        }\n\n        // Either fail the promise (passing a descriptive error message) or declare it a success (passing the upload ID)\n        if (uploadId === undefined) {\n            if (errorMessage) {\n                options.log(qq.format(\"Specific problem detected initiating multipart upload request for {}: '{}'.\", id, errorMessage), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Unexplained error with initiate multipart upload request for {}.  Status code {}.\", id, status), \"error\");\n            }\n\n            promise.failure(\"Problem initiating upload request.\", xhr);\n        }\n        else {\n            options.log(qq.format(\"Initiate multipart upload request successful for {}.  Upload ID is {}\", id, uploadId));\n            promise.success(uploadId, xhr);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleInitiateRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Initiate MPU\" request to AWS via the REST API.  First, though, we must get a signature from the\n         * local server for the request.  If all is successful, the uploadId from AWS will be passed into the promise's\n         * success handler. Otherwise, an error message will ultimately be passed into the failure method.\n         *\n         * @param id The ID associated with the file\n         * @returns {qq.Promise}\n         */\n        send: function(id) {\n            var promise = new qq.Promise();\n\n            getHeaders(id).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 initiate multipart upload request for \" + id);\n\n                pendingInitiateRequests[id] = promise;\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Complete Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadComplete.html)\n * request to S3 via the REST API.\n *\n * @param o Options passed by the creator, to overwrite any default option values.\n * @constructor\n */\nqq.s3.CompleteMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingCompleteRequests = {},\n        options = {\n            method: \"POST\",\n            contentType: \"text/xml\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Complete\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId, body) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_COMPLETE, bucket, host, options.getKey(id))\n                .withUploadId(uploadId)\n                .withContent(body)\n                .withContentType(\"application/xml; charset=UTF-8\");\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Complete MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleCompleteRequestComplete(id, xhr, isError) {\n        var promise = pendingCompleteRequests[id],\n            domParser = new DOMParser(),\n            bucket = options.getBucket(id),\n            key = options.getKey(id),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            bucketEls = responseDoc.getElementsByTagName(\"Bucket\"),\n            keyEls = responseDoc.getElementsByTagName(\"Key\");\n\n        delete pendingCompleteRequests[id];\n\n        options.log(qq.format(\"Complete response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Complete Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (bucketEls.length && keyEls.length) {\n                if (bucketEls[0].textContent !== bucket) {\n                    isError = true;\n                    options.log(qq.format(\"Wrong bucket in response to Complete Multipart Upload request for {}.\", id), \"error\");\n                }\n\n                // TODO Compare key name from response w/ expected key name if AWS ever fixes the encoding of key names in this response.\n            }\n            else {\n                isError = true;\n                options.log(qq.format(\"Missing bucket and/or key in response to Complete Multipart Upload request for {}.\", id), \"error\");\n            }\n        }\n\n        if (isError) {\n            promise.failure(\"Problem combining the file parts!\", xhr);\n        }\n        else {\n            promise.success({}, xhr);\n        }\n    }\n\n    /**\n     * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n     * @returns {string} XML string containing the body to send with the \"Complete\" request\n     */\n    function getCompleteRequestBody(etagEntries) {\n        var doc = document.implementation.createDocument(null, \"CompleteMultipartUpload\", null);\n\n        // The entries MUST be sorted by part number, per the AWS API spec.\n        etagEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(etagEntries, function(idx, etagEntry) {\n            var part = etagEntry.part,\n                etag = etagEntry.etag,\n                partEl = doc.createElement(\"Part\"),\n                partNumEl = doc.createElement(\"PartNumber\"),\n                partNumTextEl = doc.createTextNode(part),\n                etagTextEl = doc.createTextNode(etag),\n                etagEl = doc.createElement(\"ETag\");\n\n            etagEl.appendChild(etagTextEl);\n            partNumEl.appendChild(partNumTextEl);\n            partEl.appendChild(partNumEl);\n            partEl.appendChild(etagEl);\n            qq(doc).children()[0].appendChild(partEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: \"application/xml; charset=UTF-8\",\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleCompleteRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Complete\" request and fulfills the returned promise when the success of this request is known.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n         * @returns {qq.Promise}\n         */\n        send: function(id, uploadId, etagEntries) {\n            var promise = new qq.Promise(),\n                body = getCompleteRequestBody(etagEntries);\n\n            getHeaders(id, uploadId, body).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 complete multipart upload request for \" + id);\n\n                pendingCompleteRequests[id] = promise;\n                delete headers[\"Content-Type\"];\n\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .withPayload(body)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Ajax requester used to send an [\"Abort Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadAbort.html)\n * request to S3 via the REST API.\n\n * @param o\n * @constructor\n */\nqq.s3.AbortMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Abort\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @param id Associated file ID\n     * @param uploadId ID of the associated upload, according to AWS\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_ABORT, bucket, host, options.getKey(id))\n                .withUploadId(uploadId);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Abort MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleAbortRequestComplete(id, xhr, isError) {\n        var domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            errorEls = responseDoc.getElementsByTagName(\"Error\"),\n            awsErrorMsg;\n\n        options.log(qq.format(\"Abort response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Abort Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (errorEls.length) {\n                isError = true;\n                awsErrorMsg = responseDoc.getElementsByTagName(\"Message\")[0].textContent;\n                options.log(qq.format(\"Failed to Abort Multipart Upload request for {}.  Error: {}\", id, awsErrorMsg), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Abort MPU request succeeded for file ID {}.\", id));\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [\"DELETE\"],\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleAbortRequestComplete,\n        successfulResponseCodes: {\n            DELETE: [204]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Abort\" request.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         */\n        send: function(id, uploadId) {\n            getHeaders(id, uploadId).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 Abort multipart upload request for \" + id);\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            });\n        }\n    });\n};\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that depends on File API support, and, therefore, makes use of\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to S3 buckets via the associated AWS API.\n *\n * If chunking is supported and enabled, the S3 Multipart Upload REST API is utilized.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var getName = proxy.getName,\n        log = proxy.log,\n        clockDrift = spec.clockDrift,\n        expectedStatus = 200,\n        onGetBucket = spec.getBucket,\n        onGetHost = spec.getHost,\n        onGetKeyName = spec.getKeyName,\n        filenameParam = spec.filenameParam,\n        paramsStore = spec.paramsStore,\n        endpointStore = spec.endpointStore,\n        aclStore = spec.aclStore,\n        reducedRedundancy = spec.objectProperties.reducedRedundancy,\n        region = spec.objectProperties.region,\n        serverSideEncryption = spec.objectProperties.serverSideEncryption,\n        validation = spec.validation,\n        signature = qq.extend({region: region, drift: clockDrift}, spec.signature),\n        handler = this,\n        credentialsProvider = spec.signature.credentialsProvider,\n\n        chunked = {\n            // Sends a \"Complete Multipart Upload\" request and then signals completion of the upload\n            // when the response to this request has been parsed.\n            combine: function(id) {\n                var uploadId = handler._getPersistableData(id).uploadId,\n                    etagMap = handler._getPersistableData(id).etags,\n                    result = new qq.Promise();\n\n                requesters.completeMultipart.send(id, uploadId, etagMap).then(\n                    result.success,\n\n                    function failure(reason, xhr) {\n                        result.failure(upload.done(id, xhr).response, xhr);\n                    }\n                );\n\n                return result;\n            },\n\n            // The last step in handling a chunked upload.  This is called after each chunk has been sent.\n            // The request may be successful, or not.  If it was successful, we must extract the \"ETag\" element\n            // in the XML response and store that along with the associated part number.\n            // We need these items to \"Complete\" the multipart upload after all chunks have been successfully sent.\n            done: function(id, xhr, chunkIdx) {\n                var response = upload.response.parse(id, xhr),\n                    etag;\n\n                if (response.success) {\n                    etag = xhr.getResponseHeader(\"ETag\");\n\n                    if (!handler._getPersistableData(id).etags) {\n                        handler._getPersistableData(id).etags = [];\n                    }\n                    handler._getPersistableData(id).etags.push({part: chunkIdx + 1, etag: etag});\n                }\n            },\n\n            /**\n             * Determines headers that must be attached to the chunked (Multipart Upload) request.  One of these headers is an\n             * Authorization value, which must be determined by asking the local server to sign the request first.  So, this\n             * function returns a promise.  Once all headers are determined, the `success` method of the promise is called with\n             * the headers object.  If there was some problem determining the headers, we delegate to the caller's `failure`\n             * callback.\n             *\n             * @param id File ID\n             * @param chunkIdx Index of the chunk to PUT\n             * @returns {qq.Promise}\n             */\n            initHeaders: function(id, chunkIdx, blob) {\n                var headers = {},\n                    bucket = upload.bucket.getName(id),\n                    host = upload.host.getName(id),\n                    key = upload.key.urlSafe(id),\n                    promise = new qq.Promise(),\n                    signatureConstructor = requesters.restSignature.constructStringToSign\n                        (requesters.restSignature.REQUEST_TYPE.MULTIPART_UPLOAD, bucket, host, key)\n                        .withPartNum(chunkIdx + 1)\n                        .withContent(blob)\n                        .withUploadId(handler._getPersistableData(id).uploadId);\n\n                // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n                requesters.restSignature.getSignature(id + \".\" + chunkIdx, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n                return promise;\n            },\n\n            put: function(id, chunkIdx) {\n                var xhr = handler._createXhr(id, chunkIdx),\n                    chunkData = handler._getChunkData(id, chunkIdx),\n                    domain = spec.endpointStore.get(id),\n                    promise = new qq.Promise();\n\n                // Add appropriate headers to the multipart upload request.\n                // Once these have been determined (asynchronously) attach the headers and send the chunk.\n                chunked.initHeaders(id, chunkIdx, chunkData.blob).then(function(headers, endOfUrl) {\n                    if (xhr._cancelled) {\n                        log(qq.format(\"Upload of item {}.{} cancelled. Upload will not start after successful signature request.\", id, chunkIdx));\n                        promise.failure({error: \"Chunk upload cancelled\"});\n                    }\n                    else {\n                        var url = domain + \"/\" + endOfUrl;\n                        handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                        upload.track(id, xhr, chunkIdx).then(promise.success, promise.failure);\n                        xhr.open(\"PUT\", url, true);\n\n                        qq.each(headers, function(name, val) {\n                            xhr.setRequestHeader(name, val);\n                        });\n\n                        xhr.send(chunkData.blob);\n                    }\n                }, function() {\n                    promise.failure({error: \"Problem signing the chunk!\"}, xhr);\n                });\n\n                return promise;\n            },\n\n            send: function(id, chunkIdx) {\n                var promise = new qq.Promise();\n\n                chunked.setup(id).then(\n                    // The \"Initiate\" request succeeded.  We are ready to send the first chunk.\n                    function() {\n                        chunked.put(id, chunkIdx).then(promise.success, promise.failure);\n                    },\n\n                    // We were unable to initiate the chunked upload process.\n                    function(errorMessage, xhr) {\n                        promise.failure({error: errorMessage}, xhr);\n                    }\n                );\n\n                return promise;\n            },\n\n            /**\n             * Sends an \"Initiate Multipart Upload\" request to S3 via the REST API, but only if the MPU has not already been\n             * initiated.\n             *\n             * @param id Associated file ID\n             * @returns {qq.Promise} A promise that is fulfilled when the initiate request has been sent and the response has been parsed.\n             */\n            setup: function(id) {\n                var promise = new qq.Promise(),\n                    uploadId = handler._getPersistableData(id).uploadId,\n                    uploadIdPromise = new qq.Promise();\n\n                if (!uploadId) {\n                    handler._getPersistableData(id).uploadId = uploadIdPromise;\n                    requesters.initiateMultipart.send(id).then(\n                        function(uploadId) {\n                            handler._getPersistableData(id).uploadId = uploadId;\n                            uploadIdPromise.success(uploadId);\n                            promise.success(uploadId);\n                        },\n                        function(errorMsg, xhr) {\n                            handler._getPersistableData(id).uploadId = null;\n                            promise.failure(errorMsg, xhr);\n                            uploadIdPromise.failure(errorMsg, xhr);\n                        }\n                    );\n                }\n                else if (uploadId instanceof qq.Promise) {\n                    uploadId.then(function(uploadId) {\n                        promise.success(uploadId);\n                    });\n                }\n                else {\n                    promise.success(uploadId);\n                }\n\n                return promise;\n            }\n        },\n\n        requesters = {\n            abortMultipart: new qq.s3.AbortMultipartAjaxRequester({\n                endpointStore: endpointStore,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log,\n                getBucket: function(id) {\n                    return upload.bucket.getName(id);\n                },\n                getHost: function(id) {\n                    return upload.host.getName(id);\n                },\n                getKey: function(id) {\n                    return upload.key.urlSafe(id);\n                }\n            }),\n\n            completeMultipart: new qq.s3.CompleteMultipartAjaxRequester({\n                endpointStore: endpointStore,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log,\n                getBucket: function(id) {\n                    return upload.bucket.getName(id);\n                },\n                getHost: function(id) {\n                    return upload.host.getName(id);\n                },\n                getKey: function(id) {\n                    return upload.key.urlSafe(id);\n                }\n            }),\n\n            initiateMultipart: new qq.s3.InitiateMultipartAjaxRequester({\n                filenameParam: filenameParam,\n                endpointStore: endpointStore,\n                paramsStore: paramsStore,\n                signatureSpec: signature,\n                aclStore: aclStore,\n                reducedRedundancy: reducedRedundancy,\n                serverSideEncryption: serverSideEncryption,\n                cors: spec.cors,\n                log: log,\n                getContentType: function(id) {\n                    return handler._getMimeType(id);\n                },\n                getBucket: function(id) {\n                    return upload.bucket.getName(id);\n                },\n                getHost: function(id) {\n                    return upload.host.getName(id);\n                },\n                getKey: function(id) {\n                    return upload.key.urlSafe(id);\n                },\n                getName: function(id) {\n                    return getName(id);\n                }\n            }),\n\n            policySignature: new qq.s3.RequestSigner({\n                expectingPolicy: true,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log\n            }),\n\n            restSignature: new qq.s3.RequestSigner({\n                endpointStore: endpointStore,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log\n            })\n        },\n\n        simple = {\n            /**\n             * Used for simple (non-chunked) uploads to determine the parameters to send along with the request.  Part of this\n             * process involves asking the local server to sign the request, so this function returns a promise.  The promise\n             * is fulfilled when all parameters are determined, or when we determine that all parameters cannot be calculated\n             * due to some error.\n             *\n             * @param id File ID\n             * @returns {qq.Promise}\n             */\n            initParams: function(id) {\n                /*jshint -W040 */\n                var customParams = paramsStore.get(id);\n                customParams[filenameParam] = getName(id);\n\n                return qq.s3.util.generateAwsParams({\n                    endpoint: endpointStore.get(id),\n                    clockDrift: clockDrift,\n                    params: customParams,\n                    type: handler._getMimeType(id),\n                    bucket: upload.bucket.getName(id),\n                    key: handler.getThirdPartyFileId(id),\n                    accessKey: credentialsProvider.get().accessKey,\n                    sessionToken: credentialsProvider.get().sessionToken,\n                    acl: aclStore.get(id),\n                    expectedStatus: expectedStatus,\n                    minFileSize: validation.minSizeLimit,\n                    maxFileSize: validation.maxSizeLimit,\n                    reducedRedundancy: reducedRedundancy,\n                    region: region,\n                    serverSideEncryption: serverSideEncryption,\n                    signatureVersion: signature.version,\n                    log: log\n                },\n                qq.bind(requesters.policySignature.getSignature, this, id));\n            },\n\n            send: function(id) {\n                var promise = new qq.Promise(),\n                    xhr = handler._createXhr(id),\n                    fileOrBlob = handler.getFile(id);\n\n                handler._registerProgressHandler(id);\n                upload.track(id, xhr).then(promise.success, promise.failure);\n\n                // Delegate to a function the sets up the XHR request and notifies us when it is ready to be sent, along w/ the payload.\n                simple.setup(id, xhr, fileOrBlob).then(function(toSend) {\n                    log(\"Sending upload request for \" + id);\n                    xhr.send(toSend);\n                }, promise.failure);\n\n                return promise;\n            },\n\n            /**\n             * Starts the upload process by delegating to an async function that determine parameters to be attached to the\n             * request.  If all params can be determined, we are called back with the params and the caller of this function is\n             * informed by invoking the `success` method on the promise returned by this function, passing the payload of the\n             * request.  If some error occurs here, we delegate to a function that signals a failure for this upload attempt.\n             *\n             * Note that this is only used by the simple (non-chunked) upload process.\n             *\n             * @param id File ID\n             * @param xhr XMLHttpRequest to use for the upload\n             * @param fileOrBlob `File` or `Blob` to send\n             * @returns {qq.Promise}\n             */\n            setup: function(id, xhr, fileOrBlob) {\n                var formData = new FormData(),\n                    endpoint = endpointStore.get(id),\n                    url = endpoint,\n                    promise = new qq.Promise();\n\n                simple.initParams(id).then(\n                    // Success - all params determined\n                    function(awsParams) {\n                        xhr.open(\"POST\", url, true);\n\n                        qq.obj2FormData(awsParams, formData);\n\n                        // AWS requires the file field be named \"file\".\n                        formData.append(\"file\", fileOrBlob);\n\n                        promise.success(formData);\n                    },\n\n                    // Failure - we couldn't determine some params (likely the signature)\n                    function(errorMessage) {\n                        promise.failure({error: errorMessage});\n                    }\n                );\n\n                return promise;\n            }\n        },\n\n        upload = {\n            /**\n             * Note that this is called when an upload has reached a termination point,\n             * regardless of success/failure.  For example, it is called when we have\n             * encountered an error during the upload or when the file may have uploaded successfully.\n             *\n             * @param id file ID\n             */\n            bucket: {\n                promise: function(id) {\n                    var promise = new qq.Promise(),\n                        cachedBucket = handler._getFileState(id).bucket;\n\n                    if (cachedBucket) {\n                        promise.success(cachedBucket);\n                    }\n                    else {\n                        onGetBucket(id).then(function(bucket) {\n                            handler._getFileState(id).bucket = bucket;\n                            promise.success(bucket);\n                        }, promise.failure);\n                    }\n\n                    return promise;\n                },\n\n                getName: function(id) {\n                    return handler._getFileState(id).bucket;\n                }\n            },\n\n            host: {\n                promise: function(id) {\n                    var promise = new qq.Promise(),\n                        cachedHost = handler._getFileState(id).host;\n\n                    if (cachedHost) {\n                        promise.success(cachedHost);\n                    }\n                    else {\n                        onGetHost(id).then(function(host) {\n                            handler._getFileState(id).host = host;\n                            promise.success(host);\n                        }, promise.failure);\n                    }\n\n                    return promise;\n                },\n\n                getName: function(id) {\n                    return handler._getFileState(id).host;\n                }\n            },\n\n            done: function(id, xhr) {\n                var response = upload.response.parse(id, xhr),\n                    isError = response.success !== true;\n\n                if (isError && upload.response.shouldReset(response.code)) {\n                    log(\"This is an unrecoverable error, we must restart the upload entirely on the next retry attempt.\", \"error\");\n                    response.reset = true;\n                }\n\n                return {\n                    success: !isError,\n                    response: response\n                };\n            },\n\n            key: {\n                promise: function(id) {\n                    var promise = new qq.Promise(),\n                        key = handler.getThirdPartyFileId(id);\n\n                    /* jshint eqnull:true */\n                    if (key == null) {\n                        handler._setThirdPartyFileId(id, promise);\n                        onGetKeyName(id, getName(id)).then(\n                            function(keyName) {\n                                handler._setThirdPartyFileId(id, keyName);\n                                promise.success(keyName);\n                            },\n                            function(errorReason) {\n                                handler._setThirdPartyFileId(id, null);\n                                promise.failure(errorReason);\n                            }\n                        );\n                    }\n                    else if (qq.isGenericPromise(key)) {\n                        key.then(promise.success, promise.failure);\n                    }\n                    else {\n                        promise.success(key);\n                    }\n\n                    return promise;\n                },\n\n                urlSafe: function(id) {\n                    var encodedKey = handler.getThirdPartyFileId(id);\n                    return qq.s3.util.uriEscapePath(encodedKey);\n                }\n            },\n\n            response: {\n                parse: function(id, xhr) {\n                    var response = {},\n                        parsedErrorProps;\n\n                    try {\n                        log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n\n                        if (xhr.status === expectedStatus) {\n                            response.success = true;\n                        }\n                        else {\n                            parsedErrorProps = upload.response.parseError(xhr.responseText);\n\n                            if (parsedErrorProps) {\n                                response.error = parsedErrorProps.message;\n                                response.code = parsedErrorProps.code;\n                            }\n                        }\n                    }\n                    catch (error) {\n                        log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n                    }\n\n                    return response;\n                },\n\n                /**\n                 * This parses an XML response by extracting the \"Message\" and \"Code\" elements that accompany AWS error responses.\n                 *\n                 * @param awsResponseXml XML response from AWS\n                 * @returns {object} Object w/ `code` and `message` properties, or undefined if we couldn't find error info in the XML document.\n                 */\n                parseError: function(awsResponseXml) {\n                    var parser = new DOMParser(),\n                        parsedDoc = parser.parseFromString(awsResponseXml, \"application/xml\"),\n                        errorEls = parsedDoc.getElementsByTagName(\"Error\"),\n                        errorDetails = {},\n                        codeEls, messageEls;\n\n                    if (errorEls.length) {\n                        codeEls = parsedDoc.getElementsByTagName(\"Code\");\n                        messageEls = parsedDoc.getElementsByTagName(\"Message\");\n\n                        if (messageEls.length) {\n                            errorDetails.message = messageEls[0].textContent;\n                        }\n\n                        if (codeEls.length) {\n                            errorDetails.code = codeEls[0].textContent;\n                        }\n\n                        return errorDetails;\n                    }\n                },\n\n                // Determine if the upload should be restarted on the next retry attempt\n                // based on the error code returned in the response from AWS.\n                shouldReset: function(errorCode) {\n                    /*jshint -W014 */\n                    return errorCode === \"EntityTooSmall\"\n                        || errorCode === \"InvalidPart\"\n                        || errorCode === \"InvalidPartOrder\"\n                        || errorCode === \"NoSuchUpload\";\n                }\n            },\n\n            start: function(id, optChunkIdx) {\n                var promise = new qq.Promise();\n\n                upload.key.promise(id).then(function() {\n                    upload.bucket.promise(id).then(function() {\n                        upload.host.promise(id).then(function() {\n                            /* jshint eqnull:true */\n                            if (optChunkIdx == null) {\n                                simple.send(id).then(promise.success, promise.failure);\n                            }\n                            else {\n                                chunked.send(id, optChunkIdx).then(promise.success, promise.failure);\n                            }\n                        });\n                    });\n                },\n                function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n\n                return promise;\n            },\n\n            track: function(id, xhr, optChunkIdx) {\n                var promise = new qq.Promise();\n\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        var result;\n\n                        /* jshint eqnull:true */\n                        if (optChunkIdx == null) {\n                            result = upload.done(id, xhr);\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\n                        }\n                        else {\n                            chunked.done(id, xhr, optChunkIdx);\n                            result = upload.done(id, xhr);\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\n                        }\n                    }\n                };\n\n                return promise;\n            }\n        };\n\n    qq.extend(this, {\n        uploadChunk: upload.start,\n        uploadFile: upload.start\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"s3\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            expunge: function(id) {\n                var uploadId = handler._getPersistableData(id) && handler._getPersistableData(id).uploadId,\n                    existedInLocalStorage = handler._maybeDeletePersistedChunkData(id);\n\n                if (uploadId !== undefined && existedInLocalStorage) {\n                    requesters.abortMultipart.send(id, uploadId);\n                }\n\n                super_.expunge(id);\n            },\n\n            finalizeChunks: function(id) {\n                return chunked.combine(id);\n            },\n\n            _getLocalStorageId: function(id) {\n                var baseStorageId = super_._getLocalStorageId(id),\n                    bucketName = upload.bucket.getName(id);\n\n                return baseStorageId + \"-\" + bucketName;\n            }\n        };\n    });\n};\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to S3 buckets via the associated\n * AWS API.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        clockDrift = options.clockDrift,\n        onUuidChanged = proxy.onUuidChanged,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        onGetBucket = options.getBucket,\n        onGetKeyName = options.getKeyName,\n        filenameParam = options.filenameParam,\n        paramsStore = options.paramsStore,\n        endpointStore = options.endpointStore,\n        aclStore = options.aclStore,\n        reducedRedundancy = options.objectProperties.reducedRedundancy,\n        region = options.objectProperties.region,\n        serverSideEncryption = options.objectProperties.serverSideEncryption,\n        validation = options.validation,\n        signature = options.signature,\n        successRedirectUrl = options.iframeSupport.localBlankPagePath,\n        credentialsProvider = options.signature.credentialsProvider,\n        getSignatureAjaxRequester = new qq.s3.RequestSigner({\n            signatureSpec: signature,\n            cors: options.cors,\n            log: log\n        });\n\n    if (successRedirectUrl === undefined) {\n        throw new Error(\"successRedirectEndpoint MUST be defined if you intend to use browsers that do not support the File API!\");\n    }\n\n    /**\n     * Attempt to parse the contents of an iframe after receiving a response from the server.  If the contents cannot be\n     * read (perhaps due to a security error) it is safe to assume that the upload was not successful since Amazon should\n     * have redirected to a known endpoint that should provide a parseable response.\n     *\n     * @param id ID of the associated file\n     * @param iframe target of the form submit\n     * @returns {boolean} true if the contents can be read, false otherwise\n     */\n    function isValidResponse(id, iframe) {\n        var response,\n            endpoint = options.endpointStore.get(id),\n            bucket = handler._getFileState(id).bucket,\n            doc,\n            innerHtml,\n            responseData;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            responseData = qq.s3.util.parseIframeResponse(iframe);\n            if (responseData.bucket === bucket &&\n                responseData.key === qq.s3.util.encodeQueryStringParam(handler.getThirdPartyFileId(id))) {\n\n                return true;\n            }\n\n            log(\"Response from AWS included an unexpected bucket or key name.\", \"error\");\n\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n        }\n\n        return false;\n    }\n\n    function generateAwsParams(id) {\n        /*jshint -W040 */\n        var customParams = paramsStore.get(id);\n\n        customParams[filenameParam] = getName(id);\n\n        return qq.s3.util.generateAwsParams({\n            endpoint: endpointStore.get(id),\n            clockDrift: clockDrift,\n            params: customParams,\n            bucket: handler._getFileState(id).bucket,\n            key: handler.getThirdPartyFileId(id),\n            accessKey: credentialsProvider.get().accessKey,\n            sessionToken: credentialsProvider.get().sessionToken,\n            acl: aclStore.get(id),\n            minFileSize: validation.minSizeLimit,\n            maxFileSize: validation.maxSizeLimit,\n            successRedirectUrl: successRedirectUrl,\n            reducedRedundancy: reducedRedundancy,\n            region: region,\n            serverSideEncryption: serverSideEncryption,\n            signatureVersion: signature.version,\n            log: log\n        },\n        qq.bind(getSignatureAjaxRequester.getSignature, this, id));\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            endpoint = options.endpointStore.get(id),\n            fileName = getName(id);\n\n        generateAwsParams(id).then(function(params) {\n            var form = handler._initFormForUpload({\n                method: method,\n                endpoint: endpoint,\n                params: params,\n                paramsInBody: true,\n                targetName: iframe.name\n            });\n\n            promise.success(form);\n        }, function(errorMessage) {\n            promise.failure(errorMessage);\n            handleFinishedUpload(id, iframe, fileName, {error: errorMessage});\n        });\n\n        return promise;\n    }\n\n    function handleUpload(id) {\n        var iframe = handler._createIframe(id),\n            input = handler.getInput(id),\n            promise = new qq.Promise();\n\n        createForm(id, iframe).then(function(form) {\n            form.appendChild(input);\n\n            // Register a callback when the response comes in from S3\n            handler._attachLoadEvent(iframe, function(response) {\n                log(\"iframe loaded\");\n\n                // If the common response handler has determined success or failure immediately\n                if (response) {\n                    // If there is something fundamentally wrong with the response (such as iframe content is not accessible)\n                    if (response.success === false) {\n                        log(\"Amazon likely rejected the upload request\", \"error\");\n                        promise.failure(response);\n                    }\n                }\n                // The generic response (iframe onload) handler was not able to make a determination regarding the success of the request\n                else {\n                    response = {};\n                    response.success = isValidResponse(id, iframe);\n\n                    // If the more specific response handle detected a problem with the response from S3\n                    if (response.success === false) {\n                        log(\"A success response was received by Amazon, but it was invalid in some way.\", \"error\");\n                        promise.failure(response);\n                    }\n                    else {\n                        qq.extend(response, qq.s3.util.parseIframeResponse(iframe));\n                        promise.success(response);\n                    }\n                }\n\n                handleFinishedUpload(id, iframe);\n            });\n\n            log(\"Sending upload request for \" + id);\n            form.submit();\n            qq(form).remove();\n        }, promise.failure);\n\n        return promise;\n    }\n\n    function handleFinishedUpload(id, iframe) {\n        handler._detachLoadEvent(id);\n        iframe && qq(iframe).remove();\n    }\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: false,\n            inputName: \"file\"\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            onUuidChanged: onUuidChanged,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n\n    qq.extend(this, {\n        uploadFile: function(id) {\n            var name = getName(id),\n                promise = new qq.Promise();\n\n            if (handler.getThirdPartyFileId(id)) {\n                if (handler._getFileState(id).bucket) {\n                    handleUpload(id).then(promise.success, promise.failure);\n                }\n                else {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handleUpload(id).then(promise.success, promise.failure);\n                    });\n                }\n            }\n            else {\n                // The S3 uploader module will either calculate the key or ask the server for it\n                // and will call us back once it is known.\n                onGetKeyName(id, name).then(function(key) {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handler._setThirdPartyFileId(id, key);\n                        handleUpload(id).then(promise.success, promise.failure);\n                    }, function(errorReason) {\n                        promise.failure({error: errorReason});\n                    });\n                }, function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n            }\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to S3.\n * This module inherits all logic from FineUploader mode and FineUploaderBasicS3 mode and adds some UI-related logic\n * specific to the upload-to-S3 workflow.  Some inherited options and API methods have a special meaning\n * in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from s3.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"s3\");\n\n        if (!qq.supportedFeatures.ajaxUploading && options.iframeSupport.localBlankPagePath === undefined) {\n            this._options.element.innerHTML = \"<div>You MUST set the <code>localBlankPagePath</code> property \" +\n                \"of the <code>iframeSupport</code> option since this browser does not support the File API!</div>\";\n        }\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.s3.FineUploader.prototype, qq.s3.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPrivateApi);\n}());\n","/*globals qq */\nqq.azure = qq.azure || {};\nqq.azure.util = qq.azure.util || (function() {\n    \"use strict\";\n\n    return {\n        AZURE_PARAM_PREFIX: \"x-ms-meta-\",\n\n        /** Test if a request header is actually a known Azure parameter. See: https://msdn.microsoft.com/en-us/library/azure/dd179451.aspx\n         *\n         * @param name Name of the Request Header parameter.\n         * @returns {Boolean} Test result.\n         */\n        _paramNameMatchesAzureParameter: function(name) {\n            switch (name) {\n                case \"Cache-Control\":\n                case \"Content-Disposition\":\n                case \"Content-Encoding\":\n                case \"Content-MD5\":\n                case \"x-ms-blob-content-encoding\":\n                case \"x-ms-blob-content-disposition\":\n                case \"x-ms-blob-content-md5\":\n                case \"x-ms-blob-cache-control\":\n                    return true;\n                default:\n                    return false;\n            }\n        },\n\n        /** Create Prefixed request headers which are appropriate for Azure.\n         *\n         * If the request header is appropriate for Azure (e.g. Cache-Control) then it should be\n         * passed along without a metadata prefix. For all other request header parameter names,\n         * qq.azure.util.AZURE_PARAM_PREFIX should be prepended.\n         *\n         * @param name Name of the Request Header parameter to construct a (possibly) prefixed name.\n         * @returns {String} A valid Request Header parameter name.\n         */\n        _getPrefixedParamName: function(name) {\n            if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                return name;\n            }\n            else {\n                return qq.azure.util.AZURE_PARAM_PREFIX + name;\n            }\n        },\n\n        getParamsAsHeaders: function(params) {\n            var headers = {};\n\n            qq.each(params, function(name, val) {\n                var headerName = qq.azure.util._getPrefixedParamName(name),\n                    value = null;\n\n                if (qq.isFunction(val)) {\n                    value = String(val());\n                }\n                else if (qq.isObject(val)) {\n                    qq.extend(headers, qq.azure.util.getParamsAsHeaders(val));\n                }\n                else {\n                    value = String(val);\n                }\n\n                if (value !== null) {\n                    if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                        headers[headerName] = value;\n                    } else {\n                        headers[headerName] = encodeURIComponent(value);\n                    }\n                }\n            });\n\n            return headers;\n        },\n\n        parseAzureError: function(responseText, log) {\n            var domParser = new DOMParser(),\n                responseDoc = domParser.parseFromString(responseText, \"application/xml\"),\n                errorTag = responseDoc.getElementsByTagName(\"Error\")[0],\n                errorDetails = {},\n                codeTag, messageTag;\n\n            log(\"Received error response: \" + responseText, \"error\");\n\n            if (errorTag) {\n                messageTag = errorTag.getElementsByTagName(\"Message\")[0];\n                if (messageTag) {\n                    errorDetails.message = messageTag.textContent;\n                }\n\n                codeTag = errorTag.getElementsByTagName(\"Code\")[0];\n                if (codeTag) {\n                    errorDetails.code = codeTag.textContent;\n                }\n\n                log(\"Parsed Azure error: \" + JSON.stringify(errorDetails), \"error\");\n\n                return errorDetails;\n            }\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to Azure.\n * Some inherited options and API methods have a special meaning in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploaderBasic = function(o) {\n        if (!qq.supportedFeatures.ajaxUploading) {\n            throw new qq.Error(\"Uploading directly to Azure is not possible in this browser.\");\n        }\n\n        var options = {\n            signature: {\n                endpoint: null,\n\n                customHeaders: {}\n            },\n\n            // 'uuid', 'filename', or a function which may be promissory\n            blobProperties: {\n                name: \"uuid\"\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            chunking: {\n                // If this is increased, Azure may respond with a 413\n                partSize: 4000000,\n                // Don't chunk files less than this size\n                minFileSize: 4000001\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds blob names for file representations constructed from a session request.\n        this._cannedBlobNames = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, {\n        getBlobName: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedBlobNames[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n            return this._cannedBlobNames[id];\n        },\n\n        _getEndpointSpecificParams: function(id) {\n            return {\n                blob: this.getBlobName(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                container: this._endpointStore.get(id)\n            };\n        },\n\n        _createUploadHandler: function() {\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this,\n                {\n                    signature: this._options.signature,\n                    onGetBlobName: qq.bind(this._determineBlobName, this),\n                    deleteBlob: qq.bind(this._deleteBlob, this, true)\n                },\n                \"azure\");\n        },\n\n        _determineBlobName: function(id) {\n            var self = this,\n                blobNameOptionValue = this._options.blobProperties.name,\n                uuid = this.getUuid(id),\n                filename = this.getName(id),\n                fileExtension = qq.getExtension(filename),\n                blobNameToUse = uuid;\n\n            if (qq.isString(blobNameOptionValue)) {\n                switch (blobNameOptionValue) {\n                    case \"uuid\":\n                        if (fileExtension !== undefined) {\n                            blobNameToUse += \".\" + fileExtension;\n                        }\n                        return new qq.Promise().success(blobNameToUse);\n                    case \"filename\":\n                        return new qq.Promise().success(filename);\n                    default:\n                        return new qq.Promise.failure(\"Invalid blobName option value - \" + blobNameOptionValue);\n                }\n            }\n            else {\n                return blobNameOptionValue.call(this, id);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.blobName == null) {\n                throw new qq.Error(\"Did not find blob name property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedBlobNames[id] = sessionData.blobName;\n            }\n\n            return id;\n        },\n\n        _deleteBlob: function(relatedToCancel, id) {\n            var self = this,\n                deleteBlobSasUri = {},\n                blobUriStore = {\n                    get: function(id) {\n                        return self._endpointStore.get(id) + \"/\" + self.getBlobName(id);\n                    }\n                },\n                deleteFileEndpointStore = {\n                    get: function(id) {\n                        return deleteBlobSasUri[id];\n                    }\n                },\n                getSasSuccess = function(id, sasUri) {\n                    deleteBlobSasUri[id] = sasUri;\n                    deleteBlob.send(id);\n                },\n                getSasFailure = function(id, reason, xhr) {\n                    if (relatedToCancel) {\n                        self.log(\"Will cancel upload, but cannot remove uncommitted parts from Azure due to issue retrieving SAS\", \"error\");\n                        qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                    }\n                    else {\n                        self._onDeleteComplete(id, xhr, true);\n                        self._options.callbacks.onDeleteComplete(id, xhr, true);\n                    }\n                },\n                deleteBlob = new qq.azure.DeleteBlob({\n                    endpointStore: deleteFileEndpointStore,\n                    log: qq.bind(self.log, self),\n                    onDelete: function(id) {\n                        self._onDelete(id);\n                        self._options.callbacks.onDelete(id);\n                    },\n                    onDeleteComplete: function(id, xhrOrXdr, isError) {\n                        delete deleteBlobSasUri[id];\n\n                        if (isError) {\n                            if (relatedToCancel) {\n                                self.log(\"Will cancel upload, but failed to remove uncommitted parts from Azure.\", \"error\");\n                            }\n                            else {\n                                qq.azure.util.parseAzureError(xhrOrXdr.responseText, qq.bind(self.log, self));\n                            }\n                        }\n\n                        if (relatedToCancel) {\n                            qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                            self.log(\"Deleted uncommitted blob chunks for \" + id);\n                        }\n                        else {\n                            self._onDeleteComplete(id, xhrOrXdr, isError);\n                            self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                        }\n                    }\n                }),\n                getSas = new qq.azure.GetSas({\n                    cors: this._options.cors,\n                    customHeaders: this._options.signature.customHeaders,\n                    endpointStore: {\n                        get: function() {\n                            return self._options.signature.endpoint;\n                        }\n                    },\n                    restRequestVerb: deleteBlob.method,\n                    log: qq.bind(self.log, self)\n                });\n\n            getSas.request(id, blobUriStore.get(id)).then(\n                qq.bind(getSasSuccess, self, id),\n                qq.bind(getSasFailure, self, id));\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return {\n                sendDelete: function(id, uuid) {\n                    self._deleteBlob(false, id);\n                }\n            };\n        }\n    });\n}());\n","/*globals qq */\n/**\n * Upload handler used by the upload to Azure module that depends on File API support, and, therefore, makes use of\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to Azure Blob Storage containers via the\n * associated Azure API.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\n// TODO l18n for error messages returned to UI\nqq.azure.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        log = proxy.log,\n        cors = spec.cors,\n        endpointStore = spec.endpointStore,\n        paramsStore = spec.paramsStore,\n        signature = spec.signature,\n        filenameParam = spec.filenameParam,\n        minFileSizeForChunking = spec.chunking.minFileSize,\n        deleteBlob = spec.deleteBlob,\n        onGetBlobName = spec.onGetBlobName,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n\n        getBlobMetadata = function(id) {\n            var params = paramsStore.get(id);\n            params[filenameParam] = getName(id);\n            return params;\n        },\n\n        api = {\n            putBlob: new qq.azure.PutBlob({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            putBlock: new qq.azure.PutBlock({\n                log: log\n            }),\n\n            putBlockList: new qq.azure.PutBlockList({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            getSasForPutBlobOrBlock: new qq.azure.GetSas({\n                cors: cors,\n                customHeaders: signature.customHeaders,\n                endpointStore: {\n                    get: function() {\n                        return signature.endpoint;\n                    }\n                },\n                log: log,\n                restRequestVerb: \"PUT\"\n            })\n        };\n\n    function combineChunks(id) {\n        var promise = new qq.Promise();\n\n        getSignedUrl(id).then(function(sasUri) {\n            var mimeType = handler._getMimeType(id),\n                blockIdEntries = handler._getPersistableData(id).blockIdEntries;\n\n            api.putBlockList.send(id, sasUri, blockIdEntries, mimeType, function(xhr) {\n                handler._registerXhr(id, null, xhr, api.putBlockList);\n            })\n                .then(function(xhr) {\n                    log(\"Success combining chunks for id \" + id);\n                    promise.success({}, xhr);\n                }, function(xhr) {\n                    log(\"Attempt to combine chunks failed for id \" + id, \"error\");\n                    handleFailure(xhr, promise);\n                });\n\n        },\n        promise.failure);\n\n        return promise;\n    }\n\n    function determineBlobUrl(id) {\n        var containerUrl = endpointStore.get(id),\n            promise = new qq.Promise(),\n            getBlobNameSuccess = function(blobName) {\n                handler._setThirdPartyFileId(id, blobName);\n                promise.success(containerUrl + \"/\" + blobName);\n            },\n            getBlobNameFailure = function(reason) {\n                promise.failure(reason);\n            };\n\n        onGetBlobName(id).then(getBlobNameSuccess, getBlobNameFailure);\n\n        return promise;\n    }\n\n    function getSignedUrl(id, optChunkIdx) {\n        // We may have multiple SAS requests in progress for the same file, so we must include the chunk idx\n        // as part of the ID when communicating with the SAS ajax requester to avoid collisions.\n        var getSasId = optChunkIdx == null ? id : id + \".\" + optChunkIdx,\n\n            promise = new qq.Promise(),\n            getSasSuccess = function(sasUri) {\n                log(\"GET SAS request succeeded.\");\n                promise.success(sasUri);\n            },\n            getSasFailure = function(reason, getSasXhr) {\n                log(\"GET SAS request failed: \" + reason, \"error\");\n                promise.failure({error: \"Problem communicating with local server\"}, getSasXhr);\n            },\n            determineBlobUrlSuccess = function(blobUrl) {\n                api.getSasForPutBlobOrBlock.request(getSasId, blobUrl).then(\n                    getSasSuccess,\n                    getSasFailure\n                );\n            },\n            determineBlobUrlFailure = function(reason) {\n                log(qq.format(\"Failed to determine blob name for ID {} - {}\", id, reason), \"error\");\n                promise.failure({error: reason});\n            };\n\n        determineBlobUrl(id).then(determineBlobUrlSuccess, determineBlobUrlFailure);\n\n        return promise;\n    }\n\n    function handleFailure(xhr, promise) {\n        var azureError = qq.azure.util.parseAzureError(xhr.responseText, log),\n            errorMsg = \"Problem sending file to Azure\";\n\n        promise.failure({error: errorMsg,\n            azureError: azureError && azureError.message,\n            reset: xhr.status === 403\n        });\n    }\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx) {\n            var promise = new qq.Promise();\n\n            getSignedUrl(id, chunkIdx).then(\n                function(sasUri) {\n                    var xhr = handler._createXhr(id, chunkIdx),\n                    chunkData = handler._getChunkData(id, chunkIdx);\n\n                    handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                    handler._registerXhr(id, chunkIdx, xhr, api.putBlock);\n\n                    // We may have multiple put block requests in progress for the same file, so we must include the chunk idx\n                    // as part of the ID when communicating with the put block ajax requester to avoid collisions.\n                    api.putBlock.upload(id + \".\" + chunkIdx, xhr, sasUri, chunkIdx, chunkData.blob).then(\n                        function(blockIdEntry) {\n                            if (!handler._getPersistableData(id).blockIdEntries) {\n                                handler._getPersistableData(id).blockIdEntries = [];\n                            }\n\n                            handler._getPersistableData(id).blockIdEntries.push(blockIdEntry);\n                            log(\"Put Block call succeeded for \" + id);\n                            promise.success({}, xhr);\n                        },\n                        function() {\n                            log(qq.format(\"Put Block call failed for ID {} on part {}\", id, chunkIdx), \"error\");\n                            handleFailure(xhr, promise);\n                        }\n                    );\n                },\n                promise.failure\n            );\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var promise = new qq.Promise(),\n                fileOrBlob = handler.getFile(id);\n\n            getSignedUrl(id).then(function(sasUri) {\n                var xhr = handler._createXhr(id);\n\n                handler._registerProgressHandler(id);\n\n                api.putBlob.upload(id, xhr, sasUri, fileOrBlob).then(\n                    function() {\n                        log(\"Put Blob call succeeded for \" + id);\n                        promise.success({}, xhr);\n                    },\n                    function() {\n                        log(\"Put Blob call failed for \" + id, \"error\");\n                        handleFailure(xhr, promise);\n                    }\n                );\n            },\n            promise.failure);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this,\n        new qq.XhrUploadHandler({\n            options: qq.extend({namespace: \"azure\"}, spec),\n            proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n        }\n    ));\n\n    qq.override(this, function(super_) {\n        return {\n            expunge: function(id) {\n                var relatedToCancel = handler._wasCanceled(id),\n                    chunkingData = handler._getPersistableData(id),\n                    blockIdEntries = (chunkingData && chunkingData.blockIdEntries) || [];\n\n                if (relatedToCancel && blockIdEntries.length > 0) {\n                    deleteBlob(id);\n                }\n\n                super_.expunge(id);\n            },\n\n            finalizeChunks: function(id) {\n                return combineChunks(id);\n            },\n\n            _shouldChunkThisFile: function(id) {\n                var maybePossible = super_._shouldChunkThisFile(id);\n                return maybePossible && getSize(id) >= minFileSizeForChunking;\n            }\n        };\n    });\n};\n","/* globals qq */\n/**\n * Sends a GET request to the integrator's server, which should return a Shared Access Signature URI used to\n * make a specific request on a Blob via the Azure REST API.\n */\nqq.azure.GetSas = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            customHeaders: {},\n            restRequestVerb: \"PUT\",\n            endpointStore: null,\n            log: function(str, level) {}\n        },\n        requestPromises = {};\n\n    qq.extend(options, o);\n\n    function sasResponseReceived(id, xhr, isError) {\n        var promise = requestPromises[id];\n\n        if (isError) {\n            promise.failure(\"Received response code \" + xhr.status, xhr);\n        }\n        else {\n            if (xhr.responseText.length) {\n                promise.success(xhr.responseText);\n            }\n            else {\n                promise.failure(\"Empty response.\", xhr);\n            }\n        }\n\n        delete requestPromises[id];\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        successfulResponseCodes: {\n            GET: [200]\n        },\n        contentType: null,\n        customHeaders: options.customHeaders,\n        endpointStore: options.endpointStore,\n        cors: options.cors,\n        log: options.log,\n        onComplete: sasResponseReceived\n    }));\n\n    qq.extend(this, {\n        request: function(id, blobUri) {\n            var requestPromise = new qq.Promise(),\n                restVerb = options.restRequestVerb;\n\n            options.log(qq.format(\"Submitting GET SAS request for a {} REST request related to file ID {}.\", restVerb, id));\n\n            requestPromises[id] = requestPromise;\n\n            requester.initTransport(id)\n                .withParams({\n                    bloburi: blobUri,\n                    _method: restVerb\n                })\n                .withCacheBuster()\n                .send();\n\n            return requestPromise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Delete Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179413.aspx.\n */\nqq.azure.DeleteBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"DELETE\",\n        options = {\n            endpointStore: {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhr, isError) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [202];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: options.endpointStore,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete\n    }));\n\n    qq.extend(this, {\n        method: method,\n        send: function(id) {\n            options.log(\"Submitting Delete Blob request for \" + id);\n\n            return requester.initTransport(id)\n                .send();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179451.aspx.\n */\nqq.azure.PutBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id),\n                headers = qq.azure.util.getParamsAsHeaders(params);\n\n            headers[\"x-ms-blob-type\"] = \"BlockBlob\";\n\n            return headers;\n        },\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success();\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, url, file) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting Put Blob request for \" + id);\n\n            promises[id] = promise;\n            endpoints[id] = url;\n\n            requester.initTransport(id)\n                .withPayload(file)\n                .withHeaders({\"Content-Type\": file.type})\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd135726.aspx.\n */\nqq.azure.PutBlock = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        blockIdEntries = {},\n        promises = {},\n        options = {\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id],\n                blockIdEntry = blockIdEntries[id];\n\n            delete endpoints[id];\n            delete promises[id];\n            delete blockIdEntries[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success(blockIdEntry);\n            }\n        }\n    }));\n\n    function createBlockId(partNum) {\n        var digits = 5,\n            zeros = new Array(digits + 1).join(\"0\"),\n            paddedPartNum = (zeros + partNum).slice(-digits);\n\n        return btoa(paddedPartNum);\n    }\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, sasUri, partNum, blob) {\n            var promise = new qq.Promise(),\n                blockId = createBlockId(partNum);\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block request for {} = part {}\", id, partNum));\n\n            endpoints[id] = qq.format(\"{}&comp=block&blockid={}\", sasUri, encodeURIComponent(blockId));\n            blockIdEntries[id] = {part: partNum, id: blockId};\n\n            requester.initTransport(id)\n                .withPayload(blob)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block List Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179467.aspx.\n */\nqq.azure.PutBlockList = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        promises = {},\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id);\n\n            return qq.azure.util.getParamsAsHeaders(params);\n        },\n        contentType: \"text/plain\",\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: function() {},\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n\n        }\n    }));\n\n    function createRequestBody(blockIdEntries) {\n        var doc = document.implementation.createDocument(null, \"BlockList\", null);\n\n        // If we don't sort the block ID entries by part number, the file will be combined incorrectly by Azure\n        blockIdEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(blockIdEntries, function(idx, blockIdEntry) {\n            var latestEl = doc.createElement(\"Latest\"),\n                latestTextEl = doc.createTextNode(blockIdEntry.id);\n\n            latestEl.appendChild(latestTextEl);\n            qq(doc).children()[0].appendChild(latestEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    qq.extend(this, {\n        method: method,\n        send: function(id, sasUri, blockIdEntries, fileMimeType, registerXhrCallback) {\n            var promise = new qq.Promise(),\n                blockIdsXml = createRequestBody(blockIdEntries),\n                xhr;\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block List request for {}\", id));\n\n            endpoints[id] = qq.format(\"{}&comp=blocklist\", sasUri);\n\n            xhr = requester.initTransport(id)\n                .withPayload(blockIdsXml)\n                .withHeaders({\"x-ms-blob-content-type\": fileMimeType})\n                .send();\n            registerXhrCallback(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to Azure.\n * This module inherits all logic from UI & core mode and adds some UI-related logic\n * specific to the upload-to-Azure workflow.  Some inherited options and API methods have a special meaning\n * in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from azure.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"azure\");\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.azure.FineUploader.prototype, qq.azure.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploader.prototype, {\n    });\n}());\n"]}